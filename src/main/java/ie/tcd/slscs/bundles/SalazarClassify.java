package ie.tcd.slscs.bundles;

/*
 * Copyright 2016 Jim O'Regan <jaoregan@tcd.ie>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

import ie.tcd.slscs.ngramtool.NGram;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * This classifier checks if an n-gram is present in the list of
 * excluded items from Salazar 2011, Appendix 4, returning the 
 * classifications from that appendix.
 *
 * <pre>
 * @phdthesis{salazar2011lexical,
 * title={Lexical bundles in scientific English: A corpus-based study of native and 
 * non-native writing},
 * author={Salazar, Danica Joy Lorenzo},
 * year={2011},
 * school={Universitat de Barcelona}
 * }
 * </pre>
 */
public class SalazarClassify implements Classifier {
    private Map<String, SalazarClass> bundles;
    public SalazarClassify() {
        bundles = new HashMap<String, SalazarClass>();
        init_bundles();
    }
    private void init_bundles() {
        bundles.put("a change in", new SalazarClass("a change in", "change", "NP+other", "procedure", "", ""));
        bundles.put("a combination of", new SalazarClass("a combination of", "combination", "NP+of", "grouping", "", ""));
        bundles.put("a comparison of", new SalazarClass("a comparison of", "comparison", "NP+of", "procedure", "", ""));
        bundles.put("a component of", new SalazarClass("a component of", "component", "NP+of", "grouping", "", ""));
        bundles.put("a consequence of", new SalazarClass("a consequence of", "consequence", "NP+of", "causative", "", ""));
        bundles.put("a critical role", new SalazarClass("a critical role", "role", "other NP", "causative", "stance", ""));
        bundles.put("a decrease in", new SalazarClass("a decrease in", "decrease", "NP+other", "quantification", "", ""));
        bundles.put("a defect in", new SalazarClass("a defect in", "defect", "NP+other", "description", "", ""));
        bundles.put("a deletion of", new SalazarClass("a deletion of", "deletion", "NP+of", "procedure", "", ""));
        bundles.put("a density of", new SalazarClass("a density of", "density", "NP+of", "quantification", "", ""));
        bundles.put("a family of", new SalazarClass("a family of", "family", "NP+of", "grouping", "", ""));
        bundles.put("a fraction of", new SalazarClass("a fraction of", "fraction", "NP+of", "quantification", "", ""));
        bundles.put("a function of", new SalazarClass("a function of", "function", "NP+of", "description", "", ""));
        bundles.put("a gift from", new SalazarClass("a gift from", "gift", "NP+other", "acknowledgment", "", ""));
        bundles.put("a large number of", new SalazarClass("a large number of", "number", "NP+of", "quantification", "", ""));
        bundles.put("a loss of", new SalazarClass("a loss of", "loss", "NP+of", "procedure", "", ""));
        bundles.put("a member of", new SalazarClass("a member of", "member", "NP+of", "grouping", "", ""));
        bundles.put("a mixture of", new SalazarClass("a mixture of", "mixture", "NP+of", "grouping", "", ""));
        bundles.put("a model for", new SalazarClass("a model for", "model", "NP+other", "framing", "", ""));
        bundles.put("a number of", new SalazarClass("a number of", "number", "NP+of", "quantification", "", ""));
        bundles.put("a percentage of", new SalazarClass("a percentage of", "percentage", "NP+of", "quantification", "", ""));
        bundles.put("a portion of", new SalazarClass("a portion of", "portion", "NP+of", "grouping", "", ""));
        bundles.put("a previous study", new SalazarClass("a previous study", "show", "other NP", "citation", "", ""));
        bundles.put("a range of", new SalazarClass("a range of", "range", "NP+of", "grouping", "", ""));
        bundles.put("a reduction in", new SalazarClass("a reduction in", "reduction", "NP+other", "quantification", "", ""));
        bundles.put("a requirement for", new SalazarClass("a requirement for", "requirement", "NP+other", "framing", "", ""));
        bundles.put("a response to", new SalazarClass("a response to", "response", "NP+other", "causative", "", ""));
        bundles.put("a result of", new SalazarClass("a result of", "result", "NP+of", "causative", "", ""));
        bundles.put("a role for", new SalazarClass("a role for", "role", "NP+other", "causative", "", ""));
        bundles.put("a role in", new SalazarClass("a role in", "role", "NP+other", "causative", "", ""));
        bundles.put("a series of", new SalazarClass("a series of", "series", "NP+of", "grouping", "", ""));
        bundles.put("a set of", new SalazarClass("a set of", "set", "NP+of", "grouping", "", ""));
        bundles.put("a small number", new SalazarClass("a small number", "number", "other NP", "quantification", "", ""));
        bundles.put("a subset of", new SalazarClass("a subset of", "subset", "NP+of", "grouping", "", ""));
        bundles.put("a total of", new SalazarClass("a total of", "total", "NP+of", "quantification", "", ""));
        bundles.put("a variety of", new SalazarClass("a variety of", "variety", "NP+of", "grouping", "", ""));
        bundles.put("a wide range of", new SalazarClass("a wide range of", "range", "NP+of", "grouping", "", ""));
        bundles.put("absence or presence of", new SalazarClass("absence or presence of", "absence", "PP+of", "framing", "", "in the absence or presence of"));
        bundles.put("according to the manufacturer's instructions", new SalazarClass("according to the manufacturer's instructions", "manufacturer", "other NP", "procedure", "", ""));
        bundles.put("according to the manufacturer's", new SalazarClass("according to the manufacturer's", "manufacturer", "other NP", "procedure", "", ""));
        bundles.put("activity was determined", new SalazarClass("activity was determined", "determine", "other passive", "procedure", "", ""));
        bundles.put("activity was measured", new SalazarClass("activity was measured", "measure", "other passive", "procedure", "", ""));
        bundles.put("alone or in combination with", new SalazarClass("alone or in combination with", "combination", "other PP", "additive", "framing", "in combination with"));
        bundles.put("alone or in concert with", new SalazarClass("alone or in concert with", "concert", "other PP", "additive", "framing", "in concert with"));
        bundles.put("alone or in", new SalazarClass("alone or in", "combination", "other AP", "additive", "framing", ""));
        bundles.put("also observed in", new SalazarClass("also observed in", "observe", "passive+PP", "inferential", "", ""));
        bundles.put("also present in", new SalazarClass("also present in", "present", "other AP", "description", "", ""));
        bundles.put("also required for", new SalazarClass("also required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("an average of", new SalazarClass("an average of", "average", "NP+of", "quantification", "", ""));
        bundles.put("an equal volume of", new SalazarClass("an equal volume of", "volume", "NP+of", "quantification", "", ""));
        bundles.put("an equal volume", new SalazarClass("an equal volume", "volume", "other NP", "quantification", "", ""));
        bundles.put("an essential role", new SalazarClass("an essential role", "role", "other NP", "causative", "stance", ""));
        bundles.put("an important role in", new SalazarClass("an important role in", "role", "NP+other", "causative", "stance", ""));
        bundles.put("an important role", new SalazarClass("an important role", "role", "other NP", "causative", "stance", ""));
        bundles.put("an increase in", new SalazarClass("an increase in", "increase", "NP+other", "quantification", "", ""));
        bundles.put("analysis was performed", new SalazarClass("analysis was performed", "perform", "other passive", "procedure", "", ""));
        bundles.put("appear to be", new SalazarClass("appear to be", "appear", "V/A+to", "inferential", "stance", ""));
        bundles.put("appeared to be", new SalazarClass("appeared to be", "appear", "V/A+to", "inferential", "stance", "appear to be"));
        bundles.put("appears to be", new SalazarClass("appears to be", "appear", "V/A+to", "inferential", "stance", "appear to be"));
        bundles.put("are able to", new SalazarClass("are able to", "able", "V/A+to", "description", "", ""));
        bundles.put("are associated with", new SalazarClass("are associated with", "associate", "passive+PP", "inferential", "stance", ""));
        bundles.put("are consistent with", new SalazarClass("are consistent with", "consistent", "be+AP", "comparative", "citation", ""));
        bundles.put("are described in table 1", new SalazarClass("are described in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are described in table 2", new SalazarClass("are described in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are described in table 3", new SalazarClass("are described in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are described in", new SalazarClass("are described in", "describe", "passive+PP", "structuring", "citation", ""));
        bundles.put("are essential for", new SalazarClass("are essential for", "essential", "be+AP", "stance", "", ""));
        bundles.put("are expressed as", new SalazarClass("are expressed as", "express", "passive+PP", "structuring", "", ""));
        bundles.put("are found in", new SalazarClass("are found in", "find", "passive+PP", "generalization", "inferential", "is found in"));
        bundles.put("are generally thought to be", new SalazarClass("are generally thought to be", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("are generally thought to", new SalazarClass("are generally thought to", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("are given in table 1", new SalazarClass("are given in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are given in table 2", new SalazarClass("are given in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are given in table 3", new SalazarClass("are given in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are indicated by", new SalazarClass("are indicated by", "indicate", "passive+PP", "structuring", "", ""));
        bundles.put("are indicated in", new SalazarClass("are indicated in", "indicate", "passive+PP", "structuring", "", ""));
        bundles.put("are involved in", new SalazarClass("are involved in", "involve", "passive+PP", "inferential", "causative", ""));
        bundles.put("are known to", new SalazarClass("are known to", "know", "V/A+to", "generalization", "", ""));
        bundles.put("are likely to be", new SalazarClass("are likely to be", "likely", "V/A+to", "stance", "inferential", ""));
        bundles.put("are likely to", new SalazarClass("are likely to", "likely", "V/A+to", "stance", "inferential", ""));
        bundles.put("are listed in table 1", new SalazarClass("are listed in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are listed in table 2", new SalazarClass("are listed in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are listed in table 3", new SalazarClass("are listed in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are present in", new SalazarClass("are present in", "present", "other AP", "description", "", ""));
        bundles.put("are presented in table 1", new SalazarClass("are presented in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are presented in table 2", new SalazarClass("are presented in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are presented in table 3", new SalazarClass("are presented in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are representative of", new SalazarClass("are representative of", "representative", "be+AP", "inferential", "", ""));
        bundles.put("are required for", new SalazarClass("are required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("are responsible for", new SalazarClass("are responsible for", "responsible", "be+AP", "causative", "", ""));
        bundles.put("are shown as", new SalazarClass("are shown as", "show", "passive+PP", "structuring", "", ""));
        bundles.put("are shown in figure", new SalazarClass("are shown in figure", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("are shown in table 1", new SalazarClass("are shown in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are shown in table 2", new SalazarClass("are shown in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are shown in table 3", new SalazarClass("are shown in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are shown in table", new SalazarClass("are shown in table", "table", "passive+PP", "structuring", "", ""));
        bundles.put("are shown in", new SalazarClass("are shown in", "show", "passive+PP", "structuring", "", ""));
        bundles.put("are similar to those observed", new SalazarClass("are similar to those observed", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("are similar to those seen", new SalazarClass("are similar to those seen", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("are similar to those", new SalazarClass("are similar to those", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("are similar to", new SalazarClass("are similar to", "similar", "be+AP", "comparative", "", ""));
        bundles.put("are summarized in table 1", new SalazarClass("are summarized in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are summarized in table 2", new SalazarClass("are summarized in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are summarized in table 3", new SalazarClass("are summarized in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("are summarized in", new SalazarClass("are summarized in", "table", "passive+PP", "structuring", "", ""));
        bundles.put("are thought to be", new SalazarClass("are thought to be", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("are thought to", new SalazarClass("are thought to", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("are unable to", new SalazarClass("are unable to", "unable", "V/A+to", "description", "", ""));
        bundles.put("are usually thought to be", new SalazarClass("are usually thought to be", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("are usually thought to", new SalazarClass("are usually thought to", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("are very similar to those observed", new SalazarClass("are very similar to those observed", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("are very similar to those seen", new SalazarClass("are very similar to those seen", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("are very similar to those", new SalazarClass("are very similar to those", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("as a consequence of", new SalazarClass("as a consequence of", "consequence", "PP+of", "causative", "", ""));
        bundles.put("as a consequence", new SalazarClass("as a consequence", "consequence", "other PP", "causative", "", ""));
        bundles.put("as a control", new SalazarClass("as a control", "control", "other PP", "procedure", "", ""));
        bundles.put("as a function of", new SalazarClass("as a function of", "function", "PP+of", "framing", "", ""));
        bundles.put("as a model", new SalazarClass("as a model", "model", "other PP", "framing", "", ""));
        bundles.put("as a percentage of", new SalazarClass("as a percentage of", "percentage", "PP+of", "quantification", "", ""));
        bundles.put("as a result of", new SalazarClass("as a result of", "result", "PP+of", "causative", "", ""));
        bundles.put("as a result", new SalazarClass("as a result", "result", "other PP", "causative", "", ""));
        bundles.put("as can be seen in", new SalazarClass("as can be seen in", "see", "as+V", "inferential", "engagement", "as seen in"));
        bundles.put("as compared with", new SalazarClass("as compared with", "compare", "as+V", "comparative", "", ""));
        bundles.put("as described above", new SalazarClass("as described above", "describe", "as+V", "structuring", "", ""));
        bundles.put("as described by", new SalazarClass("as described by", "describe", "as+V", "citation", "", ""));
        bundles.put("as described for", new SalazarClass("as described for", "describe", "as+V", "structuring", "citation", ""));
        bundles.put("as described in materials and methods", new SalazarClass("as described in materials and methods", "describe", "as+V", "structuring", "", ""));
        bundles.put("as described in the experimental section", new SalazarClass("as described in the experimental section", "describe", "as+V", "structuring", "", ""));
        bundles.put("as described in", new SalazarClass("as described in", "describe", "as+V", "citation/structuring", "", ""));
        bundles.put("as described previously", new SalazarClass("as described previously", "describe", "as+V", "structuring", "", ""));
        bundles.put("as determined by", new SalazarClass("as determined by", "determine", "as+V", "inferential", "", ""));
        bundles.put("as in figure", new SalazarClass("as in figure", "figure", "other PP", "structuring", "", ""));
        bundles.put("as indicated by", new SalazarClass("as indicated by", "indicate", "as+V", "inferential", "structuring", ""));
        bundles.put("as judged by", new SalazarClass("as judged by", "judge", "as+V", "inferential", "", ""));
        bundles.put("as measured by", new SalazarClass("as measured by", "measure", "as+V", "procedure", "", ""));
        bundles.put("as opposed to", new SalazarClass("as opposed to", "oppose", "as+V", "comparative", "", ""));
        bundles.put("as part of", new SalazarClass("as part of", "part", "PP+of", "grouping", "", ""));
        bundles.put("as previously described", new SalazarClass("as previously described", "describe", "as+V", "structuring", "", ""));
        bundles.put("as reported previously", new SalazarClass("as reported previously", "report", "as+V", "citation", "", ""));
        bundles.put("as seen in", new SalazarClass("as seen in", "see", "as+V", "inferential", "engagement", ""));
        bundles.put("as shown by", new SalazarClass("as shown by", "show", "as+V", "inferential", "", ""));
        bundles.put("as shown in figure", new SalazarClass("as shown in figure", "figure", "as+V", "structuring", "", ""));
        bundles.put("as shown in", new SalazarClass("as shown in", "show", "as+V", "structuring", "", ""));
        bundles.put("as well as in", new SalazarClass("as well as in", "well", "others", "additive", "", "as well as"));
        bundles.put("as well as", new SalazarClass("as well as", "well", "others", "additive", "", ""));
        bundles.put("at a density of", new SalazarClass("at a density of", "density", "PP+of", "quantification", "", ""));
        bundles.put("at a flow rate of", new SalazarClass("at a flow rate of", "rate", "PP+of", "quantification", "", ""));
        bundles.put("at about the same time", new SalazarClass("at about the same time", "time", "other PP", "framing", "additive", "at the same time"));
        bundles.put("at approximately the same time", new SalazarClass("at approximately the same time", "time", "other PP", "framing", "additive", "at the same time"));
        bundles.put("at room temperature for", new SalazarClass("at room temperature for", "temperature", "other PP", "quantification", "", ""));
        bundles.put("at room temperature", new SalazarClass("at room temperature", "temperature", "other PP", "quantification", "", ""));
        bundles.put("at the end of", new SalazarClass("at the end of", "end", "PP+of", "location", "", ""));
        bundles.put("at the indicated", new SalazarClass("at the indicated", "indicate", "other passive", "structuring", "", ""));
        bundles.put("at the level of", new SalazarClass("at the level of", "level", "NP+of", "description", "", ""));
        bundles.put("at the same rate", new SalazarClass("at the same rate", "same", "other PP", "comparative", "", "at the same"));
        bundles.put("at the same time", new SalazarClass("at the same time", "same", "other PP", "comparative", "", "at the same"));
        // FIXME
        //bundles.put("at the same time", new SalazarClass("at the same time", "time", "other PP", "framing", "additive", ""));
        bundles.put("at the same", new SalazarClass("at the same", "same", "other PP", "comparative", "", ""));
        bundles.put("at the site", new SalazarClass("at the site", "site", "other PP", "location", "", ""));
        bundles.put("at the surface of", new SalazarClass("at the surface of", "surface", "PP+of", "location", "", ""));
        bundles.put("at the surface", new SalazarClass("at the surface", "surface", "other PP", "location", "", ""));
        bundles.put("at the time", new SalazarClass("at the time", "time", "other PP", "framing", "", ""));
        bundles.put("at this time", new SalazarClass("at this time", "time", "other PP", "framing", "", ""));
        bundles.put("at various times", new SalazarClass("at various times", "time", "other PP", "framing", "", ""));
        bundles.put("be able to", new SalazarClass("be able to", "able", "V/A+to", "description", "", ""));
        bundles.put("be associated with", new SalazarClass("be associated with", "associate", "passive+PP", "inferential", "stance", ""));
        bundles.put("be caused by", new SalazarClass("be caused by", "cause", "passive+PP", "causative", "stance", ""));
        bundles.put("be consistent with", new SalazarClass("be consistent with", "consistent", "be+AP", "comparative", "citation", ""));
        bundles.put("be detected in", new SalazarClass("be detected in", "detect", "passive+PP", "inferential", "stance", ""));
        bundles.put("be due to", new SalazarClass("be due to", "due to", "be+AP", "causative", "stance", ""));
        bundles.put("be expected to", new SalazarClass("be expected to", "expect", "V/A+to", "inferential", "stance", ""));
        bundles.put("be explained by", new SalazarClass("be explained by", "explain", "passive+PP", "causative", "inferential", ""));
        bundles.put("be important for", new SalazarClass("be important for", "important", "be+AP", "stance", "", ""));
        bundles.put("be involved in", new SalazarClass("be involved in", "involve", "passive+PP", "inferential", "causative", ""));
        bundles.put("be required for", new SalazarClass("be required for", "require", "passive+PP", "framing", "stance", ""));
        bundles.put("be required to", new SalazarClass("be required to", "require", "V/A+to", "framing", "stance", ""));
        bundles.put("be responsible for", new SalazarClass("be responsible for", "responsible", "be+AP", "causative", "stance", ""));
        bundles.put("be the result of", new SalazarClass("be the result of", "result", "be+AP", "causative", "stance", ""));
        bundles.put("be used to", new SalazarClass("be used to", "use", "other passive", "procedure", "", ""));
        bundles.put("been described previously", new SalazarClass("been described previously", "describe", "other passive", "citation", "", ""));
        bundles.put("been found to", new SalazarClass("been found to", "find", "V/A+to", "inferential", "", ""));
        bundles.put("been identified as", new SalazarClass("been identified as", "identify", "passive+PP", "citation", "inferential", ""));
        bundles.put("been identified in", new SalazarClass("been identified in", "identify", "passive+PP", "citation", "inferential", ""));
        bundles.put("been implicated in", new SalazarClass("been implicated in", "implicate", "passive+PP", "citation", "inferential", ""));
        bundles.put("been observed in", new SalazarClass("been observed in", "observe", "passive+PP", "inferential", "", ""));
        bundles.put("been proposed that", new SalazarClass("been proposed that", "propose", "V/N+that cl", "citation", "", ""));
        bundles.put("been proposed to", new SalazarClass("been proposed to", "propose", "V/A+to", "citation", "", ""));
        bundles.put("been reported to", new SalazarClass("been reported to", "report", "V/A+to", "citation", "", ""));
        bundles.put("been shown previously", new SalazarClass("been shown previously", "show", "other passive", "citation", "inferential", ""));
        bundles.put("been shown to", new SalazarClass("been shown to", "show", "V/A+to", "citation", "inferential", ""));
        bundles.put("been used to", new SalazarClass("been used to", "use", "other passive", "procedure", "", ""));
        bundles.put("by addition of", new SalazarClass("by addition of", "addition", "PP+of", "procedure", "", ""));
        bundles.put("by the addition of", new SalazarClass("by the addition of", "addition", "PP+of", "procedure", "", ""));
        bundles.put("by the fact that", new SalazarClass("by the fact that", "fact", "V/N+that cl", "framing", "", ""));
        bundles.put("by the method of", new SalazarClass("by the method of", "method", "PP+of", "procedure", "", ""));
        bundles.put("by the method", new SalazarClass("by the method", "method", "other PP", "procedure", "", ""));
        bundles.put("by the presence of", new SalazarClass("by the presence of", "presence", "PP+of", "framing", "", ""));
        bundles.put("by treatment with", new SalazarClass("by treatment with", "treatment", "other PP", "procedure", "", ""));
        bundles.put("by use of", new SalazarClass("by use of", "use", "PP+of", "procedure", "", ""));
        bundles.put("by virtue of", new SalazarClass("by virtue of", "virtue", "PP+of", "causative", "", ""));
        bundles.put("can be detected", new SalazarClass("can be detected", "detect", "other passive", "inferential", "stance", ""));
        bundles.put("can be seen", new SalazarClass("can be seen", "see", "other passive", "inferential", "engagement", ""));
        bundles.put("can be used", new SalazarClass("can be used", "use", "other passive", "procedure", "", ""));
        bundles.put("carried out as described", new SalazarClass("carried out as described", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("carried out as", new SalazarClass("carried out as", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("carried out at", new SalazarClass("carried out at", "carry out", "passive+PP", "procedure", "", ""));
        bundles.put("carried out in", new SalazarClass("carried out in", "carry out", "passive+PP", "procedure", "", ""));
        bundles.put("carried out using", new SalazarClass("carried out using", "carry out", "other passive", "procedure", "", ""));
        bundles.put("carried out with", new SalazarClass("carried out with", "carry out", "passive+PP", "procedure", "", ""));
        bundles.put("closely related to", new SalazarClass("closely related to", "relate", "other AP", "inferential", "", ""));
        bundles.put("compared with control", new SalazarClass("compared with control", "compare", "passive+PP", "procedure", "", ""));
        bundles.put("consistent with our", new SalazarClass("consistent with our", "consistent", "other AP", "comparative", "citation", ""));
        bundles.put("consistent with previous", new SalazarClass("consistent with previous", "consistent", "other AP", "comparative", "citation", ""));
        bundles.put("consistent with this", new SalazarClass("consistent with this", "consistent", "other AP", "comparative", "citation", ""));
        bundles.put("could be caused by", new SalazarClass("could be caused by", "cause", "passive+PP", "causative", "", "is caused by"));
        bundles.put("could be detected", new SalazarClass("could be detected", "detect", "other passive", "inferential", "stance", ""));
        bundles.put("data indicate that", new SalazarClass("data indicate that", "indicate", "V/N+that cl", "inferential", "", ""));
        bundles.put("data not shown in", new SalazarClass("data not shown in", "show", "other passive", "structuring", "", "data not shown"));
        bundles.put("data not shown", new SalazarClass("data not shown", "show", "other passive", "structuring", "", ""));
        bundles.put("data suggest that", new SalazarClass("data suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("described in figure", new SalazarClass("described in figure", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("described in the experimental section", new SalazarClass("described in the experimental section", "describe", "passive+PP", "structuring", "", ""));
        bundles.put("did not affect", new SalazarClass("did not affect", "affect", "other V fragment", "causative", "", ""));
        bundles.put("did not appear to affect", new SalazarClass("did not appear to affect", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("did not appear to be", new SalazarClass("did not appear to be", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("did not appear to contain", new SalazarClass("did not appear to contain", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("did not appear to have", new SalazarClass("did not appear to have", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("did not appear to involve", new SalazarClass("did not appear to involve", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("did not appear to", new SalazarClass("did not appear to", "appear", "V/A+to", "inferential", "stance", ""));
        bundles.put("did not appear", new SalazarClass("did not appear", "appear", "other V fragment", "inferential", "stance", ""));
        bundles.put("does not affect", new SalazarClass("does not affect", "affect", "other V fragment", "causative", "", ""));
        bundles.put("does not appear to affect", new SalazarClass("does not appear to affect", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("does not appear to be", new SalazarClass("does not appear to be", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("does not appear to contain", new SalazarClass("does not appear to contain", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("does not appear to have", new SalazarClass("does not appear to have", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("does not appear to involve", new SalazarClass("does not appear to involve", "appear", "V/A+to", "inferential", "stance", "not appear to"));
        bundles.put("does not appear to", new SalazarClass("does not appear to", "appear", "V/A+to", "inferential", "stance", ""));
        bundles.put("does not contain", new SalazarClass("does not contain", "contain", "other V fragment", "description", "", ""));
        bundles.put("does not require", new SalazarClass("does not require", "require", "other V fragment", "framing", "", ""));
        bundles.put("equal volume of", new SalazarClass("equal volume of", "volume", "NP+of", "quantification", "", ""));
        bundles.put("essentially as described", new SalazarClass("essentially as described", "describe", "as+V", "citation/structuring", "", ""));
        bundles.put("exclude the possibility", new SalazarClass("exclude the possibility", "exclude", "other V fragment", "inferential", "engagement", ""));
        bundles.put("expected to be", new SalazarClass("expected to be", "expect", "V/A+to", "inferential", "stance", ""));
        bundles.put("experiments suggest that", new SalazarClass("experiments suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("experiments were performed", new SalazarClass("experiments were performed", "perform", "other passive", "procedure", "", ""));
        bundles.put("expressed as a percentage of", new SalazarClass("expressed as a percentage of", "percentage", "passive+PP", "structuring", "", ""));
        bundles.put("extracts were prepared", new SalazarClass("extracts were prepared", "prepare", "other passive", "procedure", "", ""));
        bundles.put("findings suggest that", new SalazarClass("findings suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("for an additional", new SalazarClass("for an additional", "additional", "other PP", "quantification", "", ""));
        bundles.put("for review see", new SalazarClass("for review see", "see", "other V fragment", "structuring", "engagement", ""));
        bundles.put("for reviews see", new SalazarClass("for reviews see", "see", "other V fragment", "structuring", "engagement", ""));
        bundles.put("for the presence of", new SalazarClass("for the presence of", "presence", "PP+of", "framing", "", ""));
        bundles.put("for the production of", new SalazarClass("for the production of", "production", "PP+of", "procedure", "", ""));
        bundles.put("for their ability to", new SalazarClass("for their ability to", "ability", "other PP", "description", "", ""));
        bundles.put("for up to", new SalazarClass("for up to", "up", "other PP", "quantification", "", ""));
        bundles.put("found to be", new SalazarClass("found to be", "find", "V/A+to", "inferential", "citation", ""));
        bundles.put("had no effect on", new SalazarClass("had no effect on", "effect", "other V fragment", "causative", "", ""));
        bundles.put("had no effect", new SalazarClass("had no effect", "effect", "other V fragment", "causative", "", ""));
        bundles.put("has been demonstrated", new SalazarClass("has been demonstrated", "demonstrate", "other passive", "citation", "inferential", ""));
        bundles.put("has been described", new SalazarClass("has been described", "describe", "other passive", "citation", "", ""));
        bundles.put("has been implicated in", new SalazarClass("has been implicated in", "implicate", "passive+PP", "citation", "inferential", ""));
        bundles.put("has been implicated", new SalazarClass("has been implicated", "implicate", "other passive", "citation", "inferential", ""));
        bundles.put("has been observed", new SalazarClass("has been observed", "observe", "passive+PP", "inferential", "", ""));
        bundles.put("has been proposed", new SalazarClass("has been proposed", "propose", "other passive", "citation", "", ""));
        bundles.put("has been reported", new SalazarClass("has been reported", "report", "other passive", "citation", "", ""));
        bundles.put("has been shown to be", new SalazarClass("has been shown to be", "show", "V/A+to", "citation", "inferential", ""));
        bundles.put("has been shown to", new SalazarClass("has been shown to", "show", "V/A+to", "citation", "inferential", ""));
        bundles.put("has been shown", new SalazarClass("has been shown", "show", "other passive", "citation", "inferential", ""));
        bundles.put("has been suggested that", new SalazarClass("has been suggested that", "suggest", "V/N+that cl", "citation", "", ""));
        bundles.put("has been suggested", new SalazarClass("has been suggested", "suggest", "other passive", "citation", "", ""));
        bundles.put("has been used", new SalazarClass("has been used", "use", "other passive", "procedure", "", ""));
        bundles.put("has shown that", new SalazarClass("has shown that", "show", "V/N+that cl", "citation", "", ""));
        bundles.put("have been described", new SalazarClass("have been described", "describe", "other passive", "citation", "", ""));
        bundles.put("have been found", new SalazarClass("have been found", "find", "other passive", "citation", "inferential", ""));
        bundles.put("have been identified in", new SalazarClass("have been identified in", "identify", "passive+PP", "citation", "inferential", ""));
        bundles.put("have been identified", new SalazarClass("have been identified", "identify", "other passive", "citation", "inferential", ""));
        bundles.put("have been implicated", new SalazarClass("have been implicated", "implicate", "other passive", "citation", "inferential", ""));
        bundles.put("have been reported", new SalazarClass("have been reported", "report", "other passive", "citation", "", ""));
        bundles.put("have been shown to", new SalazarClass("have been shown to", "show", "V/A+to", "citation", "inferential", ""));
        bundles.put("have demonstrated that", new SalazarClass("have demonstrated that", "demonstrate", "V/N+that cl", "inferential", "stance", ""));
        bundles.put("have found that", new SalazarClass("have found that", "find", "V/N+that cl", "inferential", "stance", ""));
        bundles.put("have shown that", new SalazarClass("have shown that", "show", "V/N+that cl", "citation/inferential", "", ""));
        bundles.put("have suggested that", new SalazarClass("have suggested that", "suggest", "V/N+that cl", "citation", "", ""));
        bundles.put("here we have shown previously that", new SalazarClass("here we have shown previously that", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("here we have shown previously", new SalazarClass("here we have shown previously", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("here we have shown that", new SalazarClass("here we have shown that", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("here we show previously that", new SalazarClass("here we show previously that", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("here we show previously", new SalazarClass("here we show previously", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("here we show that", new SalazarClass("here we show that", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("high degree of", new SalazarClass("high degree of", "degree", "NP+of", "description", "", ""));
        bundles.put("high levels of", new SalazarClass("high levels of", "level", "NP+of", "description", "", ""));
        bundles.put("important role in", new SalazarClass("important role in", "role", "NP+other", "causative", "stance", ""));
        bundles.put("in a manner", new SalazarClass("in a manner", "manner", "other PP", "framing", "", ""));
        bundles.put("in a number of", new SalazarClass("in a number of", "number", "PP+of", "quantification", "", ""));
        bundles.put("in a similar fashion", new SalazarClass("in a similar fashion", "similar", "other PP", "comparative", "", "in a similar"));
        bundles.put("in a similar manner", new SalazarClass("in a similar manner", "similar", "other PP", "comparative", "", "in a similar"));
        bundles.put("in a similar", new SalazarClass("in a similar", "similar", "other PP", "comparative", "", ""));
        bundles.put("in a total", new SalazarClass("in a total", "total", "other PP", "quantification", "", ""));
        bundles.put("in accordance with", new SalazarClass("in accordance with", "accordance", "other PP", "framing", "citation", ""));
        bundles.put("in addition to", new SalazarClass("in addition to", "addition", "other PP", "additive", "", ""));
        bundles.put("in agreement with", new SalazarClass("in agreement with", "agreement", "other PP", "comparative", "citation", ""));
        bundles.put("in all cases", new SalazarClass("in all cases", "case", "other PP", "framing", "", ""));
        bundles.put("in combination with", new SalazarClass("in combination with", "combination", "other PP", "additive", "framing", ""));
        bundles.put("in comparison with", new SalazarClass("in comparison with", "comparison", "other PP", "comparative", "", ""));
        bundles.put("in concert with", new SalazarClass("in concert with", "concert", "other PP", "additive", "framing", ""));
        bundles.put("in conjunction with", new SalazarClass("in conjunction with", "conjunction", "other PP", "additive", "framing", ""));
        bundles.put("in contrast to", new SalazarClass("in contrast to", "contrast", "other PP", "comparative", "", ""));
        bundles.put("in contrast with", new SalazarClass("in contrast with", "contrast", "other PP", "comparative", "", ""));
        bundles.put("in each case", new SalazarClass("in each case", "case", "other PP", "framing", "", ""));
        bundles.put("in fig 1", new SalazarClass("in fig 1", "figure", "other PP", "structuring", "", ""));
        bundles.put("in figure 1", new SalazarClass("in figure 1", "figure", "other PP", "structuring", "", ""));
        bundles.put("in figure 2", new SalazarClass("in figure 2", "figure", "other PP", "structuring", "", ""));
        bundles.put("in figure 3", new SalazarClass("in figure 3", "figure", "other PP", "structuring", "", ""));
        bundles.put("in figure 5", new SalazarClass("in figure 5", "figure", "other PP", "structuring", "", ""));
        bundles.put("in figure 7", new SalazarClass("in figure 7", "figure", "other PP", "structuring", "", ""));
        bundles.put("in good agreement with", new SalazarClass("in good agreement with", "agreement", "other PP", "comparative", "citation", "in agreement with"));
        bundles.put("in order to", new SalazarClass("in order to", "order", "others", "objective", "", ""));
        bundles.put("in response to", new SalazarClass("in response to", "response", "other PP", "causative", "", ""));
        bundles.put("in some cases", new SalazarClass("in some cases", "case", "other PP", "framing", "", ""));
        bundles.put("in support of this", new SalazarClass("in support of this", "support", "PP+of", "inferential", "", "in support of"));
        bundles.put("in support of", new SalazarClass("in support of", "support", "PP+of", "inferential", "", ""));
        bundles.put("in table 1", new SalazarClass("in table 1", "table", "other PP", "structuring", "", ""));
        bundles.put("in table 2", new SalazarClass("in table 2", "table", "other PP", "structuring", "", ""));
        bundles.put("in table 3", new SalazarClass("in table 3", "table", "other PP", "structuring", "", ""));
        bundles.put("in terms of", new SalazarClass("in terms of", "term", "PP+of", "framing", "", ""));
        bundles.put("in the absence of", new SalazarClass("in the absence of", "absence", "PP+of", "framing", "", ""));
        bundles.put("in the absence or presence of", new SalazarClass("in the absence or presence of", "absence", "PP+of", "framing", "", ""));
        bundles.put("in the amount of", new SalazarClass("in the amount of", "amount", "PP+of", "quantification", "", ""));
        bundles.put("in the bottom", new SalazarClass("in the bottom", "bottom", "other PP", "location", "", ""));
        bundles.put("in the case of", new SalazarClass("in the case of", "case", "PP+of", "framing", "", ""));
        bundles.put("in the complete absence of", new SalazarClass("in the complete absence of", "absence", "PP+of", "framing", "", "in the absence of"));
        bundles.put("in the context of", new SalazarClass("in the context of", "context", "PP+of", "framing", "", ""));
        bundles.put("in the control", new SalazarClass("in the control", "control", "other PP", "procedure", "", ""));
        bundles.put("in the dark", new SalazarClass("in the dark", "dark", "other PP", "location", "", ""));
        bundles.put("in the experimental section", new SalazarClass("in the experimental section", "section", "other PP", "structuring", "", "in the materials and methods section"));
        bundles.put("in the formation of", new SalazarClass("in the formation of", "formation", "PP+of", "procedure", "", ""));
        bundles.put("in the materials and methods section", new SalazarClass("in the materials and methods section", "section", "other PP", "structuring", "", ""));
        bundles.put("in the number of", new SalazarClass("in the number of", "number", "PP+of", "quantification", "", ""));
        bundles.put("in the presence of", new SalazarClass("in the presence of", "presence", "PP+of", "framing", "", ""));
        bundles.put("in the presence or absence of", new SalazarClass("in the presence or absence of", "presence", "PP+of", "framing", "", ""));
        bundles.put("in the present study we", new SalazarClass("in the present study we", "present", "other PP", "structuring", "", ""));
        bundles.put("in the present study", new SalazarClass("in the present study", "present", "other PP", "structuring", "", ""));
        bundles.put("in the present", new SalazarClass("in the present", "present", "other PP", "structuring", "", ""));
        bundles.put("in the production of", new SalazarClass("in the production of", "production", "PP+of", "procedure", "", ""));
        bundles.put("in the region", new SalazarClass("in the region", "region", "other PP", "location", "", ""));
        bundles.put("in the regulation of", new SalazarClass("in the regulation of", "regulation", "PP+of", "procedure", "", ""));
        bundles.put("in the same direction", new SalazarClass("in the same direction", "same", "other PP", "comparative", "", "in the same"));
        bundles.put("in the same manner", new SalazarClass("in the same manner", "same", "other PP", "comparative", "", "in the same"));
        bundles.put("in the same way", new SalazarClass("in the same way", "same", "other PP", "comparative", "", "in the same"));
        bundles.put("in the same", new SalazarClass("in the same", "same", "other PP", "comparative", "", ""));
        bundles.put("in the top", new SalazarClass("in the top", "top", "other PP", "location", "", ""));
        bundles.put("in the upper", new SalazarClass("in the upper", "upper", "other PP", "location", "", ""));
        bundles.put("in the vicinity of", new SalazarClass("in the vicinity of", "vicinity", "PP+of", "location", "", ""));
        bundles.put("in these experiments", new SalazarClass("in these experiments", "experiment", "other PP", "structuring", "", ""));
        bundles.put("in this case", new SalazarClass("in this case", "case", "other PP", "framing", "", ""));
        bundles.put("in this experiment", new SalazarClass("in this experiment", "experiment", "other PP", "structuring", "", ""));
        bundles.put("in this model", new SalazarClass("in this model", "model", "other PP", "framing", "", ""));
        bundles.put("in this paper", new SalazarClass("in this paper", "paper", "other PP", "structuring", "", ""));
        bundles.put("in this process", new SalazarClass("in this process", "process", "other PP", "framing", "", ""));
        bundles.put("in this region", new SalazarClass("in this region", "region", "other PP", "location", "", ""));
        bundles.put("in this report", new SalazarClass("in this report", "report", "other PP", "structuring", "", ""));
        bundles.put("in this study we", new SalazarClass("in this study we", "study", "other PP", "structuring", "", ""));
        bundles.put("in this study", new SalazarClass("in this study", "study", "other PP", "structuring", "", ""));
        bundles.put("increasing amounts of", new SalazarClass("increasing amounts of", "increase", "NP+of", "quantification", "", ""));
        bundles.put("is a member of", new SalazarClass("is a member of", "member", "NP+of", "grouping", "", ""));
        bundles.put("is able to", new SalazarClass("is able to", "able", "V/A+to", "description", "", ""));
        bundles.put("is also possible", new SalazarClass("is also possible", "possible", "be+AP", "stance", "inferential", ""));
        bundles.put("is an important", new SalazarClass("is an important", "important", "be+AP", "engagement", "", ""));
        bundles.put("is associated with", new SalazarClass("is associated with", "associate", "passive+PP", "inferential", "stance", ""));
        bundles.put("is based on", new SalazarClass("is based on", "base", "passive+PP", "framing", "", ""));
        bundles.put("is capable of", new SalazarClass("is capable of", "capable", "be+AP", "description", "", ""));
        bundles.put("is caused by", new SalazarClass("is caused by", "cause", "passive+PP", "causative", "", ""));
        bundles.put("is composed of", new SalazarClass("is composed of", "compose", "passive+PP", "framing", "", ""));
        bundles.put("is consistent with", new SalazarClass("is consistent with", "consistent", "be+AP", "comparative", "citation", ""));
        bundles.put("is dependent on", new SalazarClass("is dependent on", "dependent", "be+AP", "framing", "", ""));
        bundles.put("is described in table 1", new SalazarClass("is described in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is described in table 2", new SalazarClass("is described in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is described in table 3", new SalazarClass("is described in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is difficult to", new SalazarClass("is difficult to", "difficult", "be+AP", "engagement", "", ""));
        bundles.put("is due to", new SalazarClass("is due to", "due to", "be+AP", "causative", "", ""));
        bundles.put("is essential for", new SalazarClass("is essential for", "essential", "be+AP", "engagement", "", ""));
        bundles.put("is found in", new SalazarClass("is found in", "find", "passive+PP", "generalization", "inferential", ""));
        bundles.put("is further supported by", new SalazarClass("is further supported by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("is further supported in part by", new SalazarClass("is further supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("is generally thought to be", new SalazarClass("is generally thought to be", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("is generally thought to", new SalazarClass("is generally thought to", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("is given in table 1", new SalazarClass("is given in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is given in table 2", new SalazarClass("is given in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is given in table 3", new SalazarClass("is given in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is important for", new SalazarClass("is important for", "important", "be+AP", "engagement", "", ""));
        bundles.put("is independent of", new SalazarClass("is independent of", "independent", "be+AP", "framing", "", ""));
        bundles.put("is indicated by", new SalazarClass("is indicated by", "indicate", "passive+PP", "structuring", "", ""));
        bundles.put("is involved in", new SalazarClass("is involved in", "involve", "passive+PP", "inferential", "causative", ""));
        bundles.put("is known about", new SalazarClass("is known about", "know", "passive+PP", "generalization", "", ""));
        bundles.put("is known to", new SalazarClass("is known to", "know", "V/A+to", "generalization", "", ""));
        bundles.put("is largely based on", new SalazarClass("is largely based on", "base", "passive+PP", "framing", "", "is based on"));
        bundles.put("is likely to be", new SalazarClass("is likely to be", "likely", "V/A+to", "stance", "inferential", ""));
        bundles.put("is likely to", new SalazarClass("is likely to", "likely", "V/A+to", "stance", "inferential", ""));
        bundles.put("is listed in table 1", new SalazarClass("is listed in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is listed in table 2", new SalazarClass("is listed in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is listed in table 3", new SalazarClass("is listed in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is localized to", new SalazarClass("is localized to", "localize", "passive+pp", "location", "", ""));
        bundles.put("is mainly based on", new SalazarClass("is mainly based on", "base", "passive+PP", "framing", "", "is based on"));
        bundles.put("is mediated by", new SalazarClass("is mediated by", "mediate", "passive+PP", "procedure", "", ""));
        bundles.put("is necessary for", new SalazarClass("is necessary for", "necessary", "be+AP", "engagement", "", ""));
        bundles.put("is not known", new SalazarClass("is not known", "know", "other passive", "generalization", "", ""));
        bundles.put("is not required for", new SalazarClass("is not required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("is not required", new SalazarClass("is not required", "require", "passive+PP", "framing", "", ""));
        bundles.put("is predicted to", new SalazarClass("is predicted to", "predict", "V/A+to", "inferential", "", ""));
        bundles.put("is present in", new SalazarClass("is present in", "present", "other AP", "description", "", ""));
        bundles.put("is presented in table 1", new SalazarClass("is presented in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is presented in table 2", new SalazarClass("is presented in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is presented in table 3", new SalazarClass("is presented in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is required for", new SalazarClass("is required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("is required to", new SalazarClass("is required to", "require", "V/A+to", "framing", "", ""));
        bundles.put("is responsible for", new SalazarClass("is responsible for", "responsible", "be+AP", "causative", "", ""));
        bundles.put("is sensitive to", new SalazarClass("is sensitive to", "sensitive", "be+AP", "framing", "", ""));
        bundles.put("is shown in figure", new SalazarClass("is shown in figure", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("is shown in table 1", new SalazarClass("is shown in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is shown in table 2", new SalazarClass("is shown in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is shown in table 3", new SalazarClass("is shown in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is shown in", new SalazarClass("is shown in", "show", "passive+PP", "structuring", "", ""));
        bundles.put("is similar to that observed", new SalazarClass("is similar to that observed", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("is similar to that seen", new SalazarClass("is similar to that seen", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("is similar to", new SalazarClass("is similar to", "similar", "be+AP", "comparative", "", ""));
        bundles.put("is subject to", new SalazarClass("is subject to", "subject", "be+AP", "framing", "", ""));
        bundles.put("is sufficient to", new SalazarClass("is sufficient to", "sufficient", "be+AP", "framing", "", ""));
        bundles.put("is summarized in table 1", new SalazarClass("is summarized in table 1", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is summarized in table 2", new SalazarClass("is summarized in table 2", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is summarized in table 3", new SalazarClass("is summarized in table 3", "table", "passive+PP", "structuring", "", "shown in table"));
        bundles.put("is supported by", new SalazarClass("is supported by", "support", "passive+PP", "inferential", "acknowledgment", ""));
        bundles.put("is supported in part by", new SalazarClass("is supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("is thought to be", new SalazarClass("is thought to be", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("is thought to", new SalazarClass("is thought to", "think", "V/A+to", "generalization", "inferential", ""));
        bundles.put("is unlikely to be", new SalazarClass("is unlikely to be", "unlikely", "V/A+to", "stance", "inferential", "is unlikely to"));
        bundles.put("is unlikely to", new SalazarClass("is unlikely to", "unlikely", "V/A+to", "stance", "inferential", ""));
        bundles.put("is usually thought to be", new SalazarClass("is usually thought to be", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("is usually thought to", new SalazarClass("is usually thought to", "think", "V/A+to", "generalization", "inferential", "is thought to"));
        bundles.put("is very similar to that observed", new SalazarClass("is very similar to that observed", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("is very similar to that seen", new SalazarClass("is very similar to that seen", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("is very similar to that", new SalazarClass("is very similar to that", "similar", "other AP", "comparative", "", "similar to that"));
        bundles.put("it appears that", new SalazarClass("it appears that", "appear", "anticipatory it", "inferential", "stance", ""));
        bundles.put("it can be seen", new SalazarClass("it can be seen", "see", "other passive", "inferential", "engagement", "can be seen"));
        bundles.put("it has been proposed that", new SalazarClass("it has been proposed that", "propose", "anticipatory it", "citation", "", ""));
        bundles.put("it has been shown that", new SalazarClass("it has been shown that", "show", "anticipatory it", "citation", "inferential", ""));
        bundles.put("it has been shown", new SalazarClass("it has been shown", "show", "anticipatory it", "citation", "inferential", ""));
        bundles.put("it has been suggested that", new SalazarClass("it has been suggested that", "suggest", "anticipatory it", "citation", "", "it has been suggested"));
        bundles.put("it has been suggested", new SalazarClass("it has been suggested", "suggest", "anticipatory it", "citation", "", ""));
        bundles.put("it is clear from that", new SalazarClass("it is clear from that", "clear", "anticipatory it", "stance", "", "it is clear"));
        bundles.put("it is clear from", new SalazarClass("it is clear from", "clear", "anticipatory it", "stance", "", "it is clear"));
        bundles.put("it is clear that", new SalazarClass("it is clear that", "clear", "anticipatory it", "stance", "", "it is clear"));
        bundles.put("it is clear", new SalazarClass("it is clear", "clear", "anticipatory it", "stance", "", ""));
        bundles.put("it is difficult to", new SalazarClass("it is difficult to", "difficult", "be+AP", "engagement", "", "is difficult to"));
        bundles.put("it is important to", new SalazarClass("it is important to", "note", "anticipatory it", "engagement", "stance", ""));
        bundles.put("it is likely that", new SalazarClass("it is likely that", "likely", "anticipatory it", "stance", "inferential", ""));
        bundles.put("it is likely", new SalazarClass("it is likely", "likely", "anticipatory it", "stance", "inferential", ""));
        bundles.put("it is not clear how", new SalazarClass("it is not clear how", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is not clear if", new SalazarClass("it is not clear if", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is not clear what", new SalazarClass("it is not clear what", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is not clear whether", new SalazarClass("it is not clear whether", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is not clear which", new SalazarClass("it is not clear which", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is not clear why", new SalazarClass("it is not clear why", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is not clear", new SalazarClass("it is not clear", "clear", "anticipatory it", "stance", "", ""));
        bundles.put("it is possible that", new SalazarClass("it is possible that", "possible", "anticipatory it", "stance", "inferential", ""));
        bundles.put("it is possible", new SalazarClass("it is possible", "possible", "anticipatory it", "stance", "inferential", ""));
        bundles.put("it is unclear how", new SalazarClass("it is unclear how", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is unclear if", new SalazarClass("it is unclear if", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is unclear what", new SalazarClass("it is unclear what", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is unclear whether", new SalazarClass("it is unclear whether", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is unclear which", new SalazarClass("it is unclear which", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is unclear why", new SalazarClass("it is unclear why", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is unclear", new SalazarClass("it is unclear", "clear", "anticipatory it", "stance", "", "it is not clear"));
        bundles.put("it is unlikely that", new SalazarClass("it is unlikely that", "unlikely", "anticipatory it", "stance", "inferential", "it is unlikely"));
        bundles.put("it is unlikely", new SalazarClass("it is unlikely", "unlikely", "anticipatory it", "stance", "inferential", ""));
        bundles.put("it seems likely that", new SalazarClass("it seems likely that", "likely", "anticipatory it", "stance", "inferential", ""));
        bundles.put("it seems unlikely that", new SalazarClass("it seems unlikely that", "unlikely", "anticipatory it", "stance", "inferential", "it is unlikely"));
        bundles.put("it seems unlikely", new SalazarClass("it seems unlikely", "unlikely", "anticipatory it", "stance", "inferential", "it is unlikely"));
        bundles.put("it should be noted that", new SalazarClass("it should be noted that", "note", "anticipatory it", "engagement", "stance", ""));
        bundles.put("it should be noted", new SalazarClass("it should be noted", "note", "anticipatory it", "engagement", "stance", ""));
        bundles.put("it was shown", new SalazarClass("it was shown", "show", "anticipatory it", "citation", "inferential", ""));
        bundles.put("it would appear that", new SalazarClass("it would appear that", "appear", "anticipatory it", "inferential", "stance", "it appears that"));
        bundles.put("its ability to", new SalazarClass("its ability to", "ability", "other NP", "description", "", ""));
        bundles.put("its interaction with", new SalazarClass("its interaction with", "interaction", "NP+other", "procedure", "", ""));
        bundles.put("kindly provided by", new SalazarClass("kindly provided by", "provide", "passive+PP", "acknowledgment", "", ""));
        bundles.put("known to be", new SalazarClass("known to be", "know", "V/A+to", "generalization", "", ""));
        bundles.put("large number of", new SalazarClass("large number of", "number", "NP+of", "quantification", "", ""));
        bundles.put("likely to be", new SalazarClass("likely to be", "likely", "V/A+to", "stance", "inferential", ""));
        bundles.put("lines of evidence", new SalazarClass("lines of evidence", "evidence", "other NP", "inferential", "", ""));
        bundles.put("little is known about", new SalazarClass("little is known about", "know", "passive+PP", "generalization", "", ""));
        bundles.put("little is known", new SalazarClass("little is known", "know", "other passive", "generalization", "", ""));
        bundles.put("little or no", new SalazarClass("little or no", "little", "other AP", "quantification", "", ""));
        bundles.put("low levels of", new SalazarClass("low levels of", "level", "NP+of", "description", "", ""));
        bundles.put("may be caused by", new SalazarClass("may be caused by", "cause", "passive+PP", "causative", "", "is caused by"));
        bundles.put("may be due", new SalazarClass("may be due", "due to", "be+AP", "causative", "stance", ""));
        bundles.put("may contribute to", new SalazarClass("may contribute to", "contribute", "other V fragment", "causative", "stance", ""));
        bundles.put("mechanism by which", new SalazarClass("mechanism by which", "mechanism", "other NP", "procedure", "", ""));
        bundles.put("medium supplemented with", new SalazarClass("medium supplemented with", "supplement", "other passive", "procedure", "", ""));
        bundles.put("model in which", new SalazarClass("model in which", "model", "NP+other", "framing", "", ""));
        bundles.put("no effect on", new SalazarClass("no effect on", "effect", "NP+other", "causative", "", ""));
        bundles.put("no evidence for", new SalazarClass("no evidence for", "evidence", "NP+other", "inferential", "", ""));
        bundles.put("not appear to be", new SalazarClass("not appear to be", "appear", "V/A+to", "inferential", "stance", ""));
        bundles.put("not appear to", new SalazarClass("not appear to", "appear", "V/A+to", "inferential", "stance", ""));
        bundles.put("not due to", new SalazarClass("not due to", "due to", "other AP", "causative", "stance", ""));
        bundles.put("not required for", new SalazarClass("not required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("not result in", new SalazarClass("not result in", "result", "other V fragment", "causative", "", ""));
        bundles.put("observations suggest that", new SalazarClass("observations suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("occur in the absence of", new SalazarClass("occur in the absence of", "absence", "PP+of", "framing", "", "in the absence of"));
        bundles.put("occur in the complete absence of", new SalazarClass("occur in the complete absence of", "absence", "PP+of", "framing", "", "in the absence of"));
        bundles.put("of a large", new SalazarClass("of a large", "large", "other PP", "quantification", "", ""));
        bundles.put("of a number of", new SalazarClass("of a number of", "number", "PP+of", "quantification", "", ""));
        bundles.put("of the indicated", new SalazarClass("of the indicated", "indicate", "other passive", "structuring", "", ""));
        bundles.put("of the total", new SalazarClass("of the total", "total", "other PP", "quantification", "", ""));
        bundles.put("on ice for", new SalazarClass("on ice for", "ice", "other PP", "procedure", "", ""));
        bundles.put("on the basis of", new SalazarClass("on the basis of", "basis", "PP+of", "framing", "", ""));
        bundles.put("on the left", new SalazarClass("on the left", "left", "other PP", "location", "", ""));
        bundles.put("on the other hand", new SalazarClass("on the other hand", "hand", "other PP", "comparative", "additive", ""));
        bundles.put("on the surface of", new SalazarClass("on the surface of", "surface", "PP+of", "location", "", ""));
        bundles.put("on the surface", new SalazarClass("on the surface", "surface", "other PP", "location", "", ""));
        bundles.put("only a small", new SalazarClass("only a small", "small", "other AP", "quantification", "", ""));
        bundles.put("other members of", new SalazarClass("other members of", "member", "NP+of", "grouping", "", ""));
        bundles.put("our data strongly suggest that", new SalazarClass("our data strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our data strongly suggest", new SalazarClass("our data strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our data suggest that", new SalazarClass("our data suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our data suggest", new SalazarClass("our data suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our experiments strongly suggest that", new SalazarClass("our experiments strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our experiments strongly suggest", new SalazarClass("our experiments strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our experiments suggest that", new SalazarClass("our experiments suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our experiments suggest", new SalazarClass("our experiments suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our findings strongly suggest that", new SalazarClass("our findings strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our findings strongly suggest", new SalazarClass("our findings strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our findings suggest that", new SalazarClass("our findings suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our findings suggest", new SalazarClass("our findings suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our observations strongly suggest that", new SalazarClass("our observations strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our observations strongly suggest", new SalazarClass("our observations strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our observations suggest that", new SalazarClass("our observations suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our observations suggest", new SalazarClass("our observations suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our results strongly suggest that", new SalazarClass("our results strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our results strongly suggest", new SalazarClass("our results strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our results suggest that", new SalazarClass("our results suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("our results suggest", new SalazarClass("our results suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("performed as described previously", new SalazarClass("performed as described previously", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("performed as described", new SalazarClass("performed as described", "describe", "other passive", "citation/structuring", "", ""));
        bundles.put("play a role in", new SalazarClass("play a role in", "role", "other V fragment", "causative", "", ""));
        bundles.put("play a role", new SalazarClass("play a role", "role", "other V fragment", "causative", "", ""));
        bundles.put("possibility is that", new SalazarClass("possibility is that", "possible", "V/N+that cl", "stance", "inferential", ""));
        bundles.put("predicted to be", new SalazarClass("predicted to be", "predict", "V/A+to", "inferential", "", ""));
        bundles.put("prepared as described", new SalazarClass("prepared as described", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("previous studies have", new SalazarClass("previous studies have", "show", "other NP", "citation", "", ""));
        bundles.put("referred to as", new SalazarClass("referred to as", "refer", "passive+PP", "structuring", "", ""));
        bundles.put("remains to be determined", new SalazarClass("remains to be determined", "remain", "V/A+to", "objective", "", ""));
        bundles.put("remains to be", new SalazarClass("remains to be", "remain", "V/A+to", "objective", "", ""));
        bundles.put("results are consistent with", new SalazarClass("results are consistent with", "consistent", "others", "comparative", "citation", ""));
        bundles.put("results are expressed", new SalazarClass("results are expressed", "express", "other passive", "structuring", "", ""));
        bundles.put("results demonstrate that", new SalazarClass("results demonstrate that", "demonstrate", "V/N+that cl", "inferential", "", ""));
        bundles.put("results indicate that", new SalazarClass("results indicate that", "indicate", "V/N+that cl", "inferential", "", ""));
        bundles.put("results not shown in", new SalazarClass("results not shown in", "show", "other passive", "structuring", "", "data not shown"));
        bundles.put("results not shown", new SalazarClass("results not shown", "show", "other passive", "structuring", "", "data not shown"));
        bundles.put("results show that", new SalazarClass("results show that", "show", "V/N+that cl", "citation", "", ""));
        bundles.put("results suggest that", new SalazarClass("results suggest that", "suggest", "V/N+that cl", "inferential", "stance", ""));
        bundles.put("results were obtained", new SalazarClass("results were obtained", "result", "other passive", "comparative", "", ""));
        bundles.put("see figure 1", new SalazarClass("see figure 1", "see", "other V fragment", "structuring", "engagement", ""));
        bundles.put("see figure 2", new SalazarClass("see figure 2", "see", "other V fragment", "structuring", "engagement", ""));
        bundles.put("see materials and methods", new SalazarClass("see materials and methods", "see", "other V fragment", "inferential", "engagement", ""));
        bundles.put("see table 1", new SalazarClass("see table 1", "see", "other V fragment", "structuring", "engagement", ""));
        bundles.put("see table 2", new SalazarClass("see table 2", "see", "other V fragment", "structuring", "engagement", "see table 1"));
        bundles.put("several lines of evidence", new SalazarClass("several lines of evidence", "evidence", "other NP", "inferential", "", "lines of evidence"));
        bundles.put("shown in fig", new SalazarClass("shown in fig", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("shown in figure 1", new SalazarClass("shown in figure 1", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("shown in figure 2", new SalazarClass("shown in figure 2", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("shown in figure 3", new SalazarClass("shown in figure 3", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("shown in figure", new SalazarClass("shown in figure", "figure", "passive+PP", "structuring", "", ""));
        bundles.put("shown in table", new SalazarClass("shown in table", "table", "passive+PP", "structuring", "", ""));
        bundles.put("shown previously that", new SalazarClass("shown previously that", "show", "V/N+that cl", "citation", "inferential", ""));
        //bundles.put("shown previously that", new SalazarClass("shown previously that", "show", "V/N+that cl", "inferential", "", ""));
        bundles.put("shown to be", new SalazarClass("shown to be", "show", "V/A+to", "citation", "inferential", ""));
        bundles.put("significantly different from", new SalazarClass("significantly different from", "different", "other AP", "comparative", "", ""));
        bundles.put("similar results were obtained", new SalazarClass("similar results were obtained", "result", "other passive", "comparative", "", ""));
        bundles.put("similar results were", new SalazarClass("similar results were", "result", "other NP", "comparative", "", ""));
        bundles.put("similar to that of", new SalazarClass("similar to that of", "similar", "other AP", "comparative", "", ""));
        bundles.put("similar to that", new SalazarClass("similar to that", "similar", "other AP", "comparative", "", ""));
        bundles.put("similar to those", new SalazarClass("similar to those", "similar", "other AP", "comparative", "", ""));
        bundles.put("small number of", new SalazarClass("small number of", "number", "NP+of", "quantification", "", ""));
        bundles.put("studies have shown that", new SalazarClass("studies have shown that", "show", "V/N+that cl", "citation", "", ""));
        bundles.put("suggesting that this", new SalazarClass("suggesting that this", "suggest", "other V fragment", "inferential", "stance", ""));
        bundles.put("summarized in table", new SalazarClass("summarized in table", "table", "passive+PP", "structuring", "", ""));
        bundles.put("taken together our data strongly suggest that", new SalazarClass("taken together our data strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our data strongly suggest", new SalazarClass("taken together our data strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our data suggest that", new SalazarClass("taken together our data suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our data suggest", new SalazarClass("taken together our data suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our experiments strongly suggest that", new SalazarClass("taken together our experiments strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our experiments strongly suggest", new SalazarClass("taken together our experiments strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our experiments suggest that", new SalazarClass("taken together our experiments suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our experiments suggest", new SalazarClass("taken together our experiments suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our findings strongly suggest that", new SalazarClass("taken together our findings strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our findings strongly suggest", new SalazarClass("taken together our findings strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our findings suggest that", new SalazarClass("taken together our findings suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our findings suggest", new SalazarClass("taken together our findings suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our observations strongly suggest that", new SalazarClass("taken together our observations strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our observations strongly suggest", new SalazarClass("taken together our observations strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our observations suggest that", new SalazarClass("taken together our observations suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our observations suggest", new SalazarClass("taken together our observations suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our results strongly suggest that", new SalazarClass("taken together our results strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our results strongly suggest", new SalazarClass("taken together our results strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our results suggest that", new SalazarClass("taken together our results suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together our results suggest", new SalazarClass("taken together our results suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these data strongly suggest that", new SalazarClass("taken together these data strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these data strongly suggest", new SalazarClass("taken together these data strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these data suggest that", new SalazarClass("taken together these data suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these data suggest", new SalazarClass("taken together these data suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these experiments strongly suggest that", new SalazarClass("taken together these experiments strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these experiments strongly suggest", new SalazarClass("taken together these experiments strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these experiments suggest that", new SalazarClass("taken together these experiments suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these experiments suggest", new SalazarClass("taken together these experiments suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these findings strongly suggest that", new SalazarClass("taken together these findings strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these findings strongly suggest", new SalazarClass("taken together these findings strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these findings suggest that", new SalazarClass("taken together these findings suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these findings suggest", new SalazarClass("taken together these findings suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these observations strongly suggest that", new SalazarClass("taken together these observations strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these observations strongly suggest", new SalazarClass("taken together these observations strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these observations suggest that", new SalazarClass("taken together these observations suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these observations suggest", new SalazarClass("taken together these observations suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these results strongly suggest that", new SalazarClass("taken together these results strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these results strongly suggest", new SalazarClass("taken together these results strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these results suggest that", new SalazarClass("taken together these results suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these results suggest", new SalazarClass("taken together these results suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("taken together these results", new SalazarClass("taken together these results", "suggest", "others", "inferential", "stance", ""));
        bundles.put("taken together these", new SalazarClass("taken together these", "suggest", "others", "inferential", "stance", ""));
        bundles.put("tested for their ability to", new SalazarClass("tested for their ability to", "test", "passive+PP", "procedure", "", ""));
        bundles.put("that are required for", new SalazarClass("that are required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("the ability of", new SalazarClass("the ability of", "ability", "NP+of", "description", "", ""));
        bundles.put("the ability to", new SalazarClass("the ability to", "ability", "other NP", "description", "", ""));
        bundles.put("the absence of", new SalazarClass("the absence of", "absence", "NP+of", "description", "", ""));
        bundles.put("the accumulation of", new SalazarClass("the accumulation of", "accumulation", "NP+of", "procedure", "", ""));
        bundles.put("the action of", new SalazarClass("the action of", "action", "NP+of", "procedure", "", ""));
        bundles.put("the activities of", new SalazarClass("the activities of", "activity", "NP+of", "procedure", "", ""));
        bundles.put("the activity of", new SalazarClass("the activity of", "activity", "NP+of", "procedure", "", ""));
        bundles.put("the addition of", new SalazarClass("the addition of", "addition", "NP+of", "procedure", "", ""));
        bundles.put("the amount of", new SalazarClass("the amount of", "amount", "NP+of", "quantification", "", ""));
        bundles.put("the analysis of", new SalazarClass("the analysis of", "analysis", "NP+of", "procedure", "", ""));
        bundles.put("the appearance of", new SalazarClass("the appearance of", "appearance", "NP+of", "description", "", ""));
        bundles.put("the assembly of", new SalazarClass("the assembly of", "assembly", "NP+of", "procedure", "", ""));
        bundles.put("the association of", new SalazarClass("the association of", "association", "NP+of", "inferential", "stance", ""));
        bundles.put("the average of", new SalazarClass("the average of", "average", "NP+of", "quantification", "", ""));
        bundles.put("the basis of", new SalazarClass("the basis of", "basis", "NP+of", "framing", "", ""));
        bundles.put("the beginning of", new SalazarClass("the beginning of", "beginning", "NP+of", "procedure", "", ""));
        bundles.put("the behavior of", new SalazarClass("the behavior of", "behavior", "NP+of", "description", "", ""));
        bundles.put("the bottom of", new SalazarClass("the bottom of", "bottom", "NP+of", "location", "", ""));
        bundles.put("the combination of", new SalazarClass("the combination of", "combination", "NP+of", "grouping", "", ""));
        bundles.put("the conclusion that", new SalazarClass("the conclusion that", "conclusion", "V/N+that cl", "inferential", "", ""));
        bundles.put("the context of", new SalazarClass("the context of", "context", "NP+of", "framing", "", ""));
        bundles.put("the control of", new SalazarClass("the control of", "control", "NP+of", "procedure", "", ""));
        bundles.put("the course of", new SalazarClass("the course of", "course", "NP+of", "framing", "", ""));
        bundles.put("the degree of", new SalazarClass("the degree of", "degree", "NP+of", "description", "", ""));
        bundles.put("the detection of", new SalazarClass("the detection of", "detection", "NP+of", "procedure", "", ""));
        bundles.put("the development of", new SalazarClass("the development of", "development", "NP+of", "procedure", "", ""));
        bundles.put("the difference between", new SalazarClass("the difference between", "difference", "NP+other", "comparative", "", ""));
        bundles.put("the difference in", new SalazarClass("the difference in", "difference", "NP+other", "comparative", "", ""));
        bundles.put("the differences in", new SalazarClass("the differences in", "difference", "NP+other", "comparative", "", "the difference in"));
        bundles.put("the distribution of", new SalazarClass("the distribution of", "distribution", "NP+of", "grouping", "", ""));
        bundles.put("the effect of", new SalazarClass("the effect of", "effect", "NP+of", "causative", "", ""));
        bundles.put("the effects of", new SalazarClass("the effects of", "effect", "NP+of", "causative", "", ""));
        bundles.put("the efficiency of", new SalazarClass("the efficiency of", "efficiency", "NP+of", "quantification", "", ""));
        bundles.put("the end of", new SalazarClass("the end of", "end", "NP+of", "location", "", ""));
        bundles.put("the evolution of", new SalazarClass("the evolution of", "evolution", "NP+of", "procedure", "", ""));
        bundles.put("the existence of", new SalazarClass("the existence of", "existence", "NP+of", "description", "", ""));
        bundles.put("the extent of", new SalazarClass("the extent of", "extent", "NP+of", "description", "", ""));
        bundles.put("the fact that", new SalazarClass("the fact that", "fact", "V/N+that cl", "framing", "", ""));
        bundles.put("the finding that", new SalazarClass("the finding that", "finding", "V/N+that cl", "inferential", "", ""));
        bundles.put("the formation of", new SalazarClass("the formation of", "formation", "NP+of", "procedure", "", ""));
        bundles.put("the fraction of", new SalazarClass("the fraction of", "fraction", "NP+of", "quantification", "", ""));
        bundles.put("the frequency of", new SalazarClass("the frequency of", "frequency", "NP+of", "quantification", "", ""));
        bundles.put("the function of", new SalazarClass("the function of", "function", "NP+of", "description", "", ""));
        bundles.put("the generation of", new SalazarClass("the generation of", "generation", "NP+of", "procedure", "", ""));
        bundles.put("the growth of", new SalazarClass("the growth of", "growth", "NP+of", "procedure", "", ""));
        bundles.put("the hypothesis that", new SalazarClass("the hypothesis that", "hypothesis", "V/N+that cl", "inferential", "", ""));
        bundles.put("the idea that", new SalazarClass("the idea that", "idea", "V/N+that cl", "framing", "", ""));
        bundles.put("the identification of", new SalazarClass("the identification of", "identification", "NP+of", "procedure", "", ""));
        bundles.put("the identity of", new SalazarClass("the identity of", "identity", "NP+of", "description", "", ""));
        bundles.put("the importance of", new SalazarClass("the importance of", "importance", "NP+of", "description", "", ""));
        bundles.put("the inability of", new SalazarClass("the inability of", "inability", "NP+of", "description", "", ""));
        bundles.put("the incorporation of", new SalazarClass("the incorporation of", "incorporation", "NP+of", "procedure", "", ""));
        bundles.put("the increase in", new SalazarClass("the increase in", "increase", "NP+other", "quantification", "", ""));
        bundles.put("the indicated times", new SalazarClass("the indicated times", "indicate", "other NP", "structuring", "", ""));
        bundles.put("the intensity of", new SalazarClass("the intensity of", "intensity", "NP+of", "description", "", ""));
        bundles.put("the interaction between", new SalazarClass("the interaction between", "interaction", "NP+other", "procedure", "", ""));
        bundles.put("the interaction of", new SalazarClass("the interaction of", "interaction", "NP+of", "procedure", "", ""));
        bundles.put("the interaction with", new SalazarClass("the interaction with", "interaction", "NP+other", "procedure", "", ""));
        bundles.put("the introduction of", new SalazarClass("the introduction of", "introduction", "NP+of", "procedure", "", ""));
        bundles.put("the isolation of", new SalazarClass("the isolation of", "isolation", "passive+PP", "procedure", "", ""));
        bundles.put("the lack of", new SalazarClass("the lack of", "lack", "NP+of", "description", "", ""));
        bundles.put("the length of", new SalazarClass("the length of", "length", "NP+of", "quantification", "", ""));
        bundles.put("the level of", new SalazarClass("the level of", "level", "NP+of", "description", "", ""));
        bundles.put("the levels of", new SalazarClass("the levels of", "level", "NP+of", "description", "", ""));
        bundles.put("the localization of", new SalazarClass("the localization of", "localization", "NP+of", "location", "", ""));
        bundles.put("the location of", new SalazarClass("the location of", "location", "NP+of", "location", "", ""));
        bundles.put("the loss of", new SalazarClass("the loss of", "loss", "NP+of", "procedure", "", ""));
        bundles.put("the majority of", new SalazarClass("the majority of", "majority", "NP+of", "quantification", "", ""));
        bundles.put("the manufacturer's instructions", new SalazarClass("the manufacturer's instructions", "manufacturer", "other NP", "procedure", "", ""));
        bundles.put("the mechanism of", new SalazarClass("the mechanism of", "mechanism", "NP+of", "procedure", "", ""));
        bundles.put("the method of", new SalazarClass("the method of", "method", "NP+of", "procedure", "", ""));
        bundles.put("the nature of", new SalazarClass("the nature of", "nature", "NP+of", "description", "", ""));
        bundles.put("the notion that", new SalazarClass("the notion that", "notion", "V/N+that cl", "framing", "", ""));
        bundles.put("the number of", new SalazarClass("the number of", "number", "NP+of", "quantification", "", ""));
        bundles.put("the observation that", new SalazarClass("the observation that", "observation", "V/N+that cl", "inferential", "", ""));
        bundles.put("the onset of", new SalazarClass("the onset of", "onset", "NP+of", "procedure", "", ""));
        bundles.put("the organization of", new SalazarClass("the organization of", "organization", "NP+of", "procedure", "", ""));
        bundles.put("the origin of", new SalazarClass("the origin of", "origin", "NP+of", "procedure", "", ""));
        bundles.put("the pattern of", new SalazarClass("the pattern of", "pattern", "NP+of", "procedure", "", ""));
        bundles.put("the percentage of", new SalazarClass("the percentage of", "percentage", "NP+of", "quantification", "", ""));
        bundles.put("the position of", new SalazarClass("the position of", "position", "NP+of", "location", "", ""));
        bundles.put("the positions of", new SalazarClass("the positions of", "position", "NP+of", "location", "", ""));
        bundles.put("the possibility of", new SalazarClass("the possibility of", "exclude", "NP+of", "inferential", "engagement", ""));
        //bundles.put("the possibility that", new SalazarClass("the possibility that", "exclude", "V/N+that cl", "inferential", "engagement", ""));
        bundles.put("the possibility that", new SalazarClass("the possibility that", "possibility", "V/N+that cl", "stance", "inferential", ""));
        bundles.put("the presence of", new SalazarClass("the presence of", "presence", "NP+of", "description", "", ""));
        bundles.put("the present study", new SalazarClass("the present study", "present/study", "other NP", "structuring", "", ""));
        bundles.put("the present work", new SalazarClass("the present work", "work", "other NP", "structuring", "", ""));
        bundles.put("the process of", new SalazarClass("the process of", "process", "NP+of", "procedure", "", ""));
        bundles.put("the product of", new SalazarClass("the product of", "product", "NP+of", "causative", "", ""));
        bundles.put("the production of", new SalazarClass("the production of", "production", "NP+of", "procedure", "", ""));
        bundles.put("the products of", new SalazarClass("the products of", "product", "NP+of", "causative", "", ""));
        bundles.put("the properties of", new SalazarClass("the properties of", "property", "NP+of", "description", "", ""));
        bundles.put("the proportion of", new SalazarClass("the proportion of", "proportion", "NP+of", "quantification", "", ""));
        bundles.put("the question of", new SalazarClass("the question of", "question", "NP+of", "framing", "", ""));
        bundles.put("the range of", new SalazarClass("the range of", "range", "NP+of", "grouping", "", ""));
        bundles.put("the rate of", new SalazarClass("the rate of", "rate", "NP+of", "quantification", "", ""));
        bundles.put("the rates of", new SalazarClass("the rates of", "rate", "NP+of", "quantification", "", ""));
        bundles.put("the ratio of", new SalazarClass("the ratio of", "ratio", "NP+of", "quantification", "", ""));
        bundles.put("the reduction in", new SalazarClass("the reduction in", "reduction", "NP+other", "quantification", "", ""));
        bundles.put("the region of", new SalazarClass("the region of", "region", "NP+of", "location", "", ""));
        bundles.put("the relationship between", new SalazarClass("the relationship between", "relationship", "NP+other", "inferential", "", ""));
        bundles.put("the release of", new SalazarClass("the release of", "release", "NP+of", "procedure", "", ""));
        bundles.put("the remainder of", new SalazarClass("the remainder of", "remainder", "NP+of", "grouping", "", ""));
        bundles.put("the removal of", new SalazarClass("the removal of", "removal", "NP+of", "procedure", "", ""));
        bundles.put("the requirement for", new SalazarClass("the requirement for", "requirement", "NP+other", "framing", "", ""));
        bundles.put("the rest of", new SalazarClass("the rest of", "rest", "NP+of", "grouping", "", ""));
        bundles.put("the result of", new SalazarClass("the result of", "result", "NP+of", "causative", "", ""));
        bundles.put("the results obtained from", new SalazarClass("the results obtained from", "result", "other NP", "inferential", "", "the results obtained"));
        bundles.put("the results obtained in", new SalazarClass("the results obtained in", "result", "other NP", "inferential", "", "the results obtained"));
        bundles.put("the results obtained with", new SalazarClass("the results obtained with", "result", "other NP", "inferential", "", "the results obtained"));
        bundles.put("the results obtained", new SalazarClass("the results obtained", "result", "other NP", "inferential", "", ""));
        bundles.put("the results of", new SalazarClass("the results of", "result", "NP+of", "causative", "", ""));
        bundles.put("the results presented here", new SalazarClass("the results presented here", "result", "other NP", "inferential", "", "the results presented"));
        bundles.put("the results presented in", new SalazarClass("the results presented in", "result", "other NP", "inferential", "", "the results presented"));
        bundles.put("the results presented", new SalazarClass("the results presented", "result", "other NP", "inferential", "", ""));
        bundles.put("the role of", new SalazarClass("the role of", "role", "NP+of", "causative", "", ""));
        bundles.put("the same as", new SalazarClass("the same as", "same", "other AP", "comparative", "", ""));
        bundles.put("the same time", new SalazarClass("the same time", "time", "other NP", "framing", "", ""));
        bundles.put("the sequence of", new SalazarClass("the sequence of", "sequence", "NP+of", "grouping", "", ""));
        bundles.put("the significance of", new SalazarClass("the significance of", "significance", "NP+of", "description", "", ""));
        bundles.put("the site of", new SalazarClass("the site of", "site", "NP+of", "location", "", ""));
        bundles.put("the size of", new SalazarClass("the size of", "size", "NP+of", "quantification", "", ""));
        bundles.put("the stability of", new SalazarClass("the stability of", "stability", "NP+of", "description", "", ""));
        bundles.put("the structure of", new SalazarClass("the structure of", "structure", "NP+of", "description", "", ""));
        bundles.put("the study of", new SalazarClass("the study of", "study", "NP+of", "procedure", "", ""));
        bundles.put("the surface of", new SalazarClass("the surface of", "surface", "NP+of", "location", "", ""));
        bundles.put("the time of", new SalazarClass("the time of", "time", "NP+of", "quantification", "", ""));
        bundles.put("the timing of", new SalazarClass("the timing of", "timing", "NP+of", "description", "", ""));
        bundles.put("the tip of", new SalazarClass("the tip of", "tip", "NP+of", "location", "", ""));
        bundles.put("the top of", new SalazarClass("the top of", "top", "NP+of", "location", "", ""));
        bundles.put("the total number of", new SalazarClass("the total number of", "number", "NP+of", "quantification", "", ""));
        bundles.put("the use of", new SalazarClass("the use of", "use", "NP+of", "procedure", "", ""));
        bundles.put("the value of", new SalazarClass("the value of", "value", "NP+of", "quantification", "", ""));
        bundles.put("the yield of", new SalazarClass("the yield of", "yield", "NP+of", "causative", "", ""));
        bundles.put("their ability to", new SalazarClass("their ability to", "ability", "other NP", "description", "", ""));
        bundles.put("there are several", new SalazarClass("there are several", "several", "others", "inferential", "framing", ""));
        bundles.put("therefore we conclude that", new SalazarClass("therefore we conclude that", "conclude", "we+V", "inferential", "stance", "we conclude that"));
        bundles.put("these data indicate that", new SalazarClass("these data indicate that", "indicate", "V/N+that cl", "inferential", "", ""));
        bundles.put("these data strongly suggest that", new SalazarClass("these data strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these data strongly suggest", new SalazarClass("these data strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these data suggest that", new SalazarClass("these data suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these data suggest", new SalazarClass("these data suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these experiments strongly suggest that", new SalazarClass("these experiments strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these experiments strongly suggest", new SalazarClass("these experiments strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these experiments suggest that", new SalazarClass("these experiments suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these experiments suggest", new SalazarClass("these experiments suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these findings strongly suggest that", new SalazarClass("these findings strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these findings strongly suggest", new SalazarClass("these findings strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these findings suggest that", new SalazarClass("these findings suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these findings suggest", new SalazarClass("these findings suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these observations strongly suggest that", new SalazarClass("these observations strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these observations strongly suggest", new SalazarClass("these observations strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these observations suggest that", new SalazarClass("these observations suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these observations suggest", new SalazarClass("these observations suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these results are consistent with", new SalazarClass("these results are consistent with", "consistent", "others", "comparative", "citation", ""));
        bundles.put("these results indicate that", new SalazarClass("these results indicate that", "indicate", "V/N+that cl", "inferential", "", ""));
        bundles.put("these results strongly suggest that", new SalazarClass("these results strongly suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these results strongly suggest", new SalazarClass("these results strongly suggest", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these results suggest that", new SalazarClass("these results suggest that", "suggest", "V/N+that cl", "inferential", "stance", "results suggest that"));
        bundles.put("these results suggest", new SalazarClass("these results suggest", "suggest", "other V fragment", "inferential", "stance", "results suggest that"));
        bundles.put("this implies that", new SalazarClass("this implies that", "imply", "V/N+that cl", "inferential", "", ""));
        bundles.put("this indicates that", new SalazarClass("this indicates that", "indicate", "V/N+that cl", "inferential", "", ""));
        bundles.put("this is consistent with", new SalazarClass("this is consistent with", "consistent", "others", "comparative", "citation", ""));
        bundles.put("this region of", new SalazarClass("this region of", "region", "NP+of", "location", "", ""));
        bundles.put("this strongly suggests that", new SalazarClass("this strongly suggests that", "suggest", "V/N+that cl", "inferential", "stance", "this suggests that"));
        bundles.put("this study is further supported in part by", new SalazarClass("this study is further supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this study is supported in part by", new SalazarClass("this study is supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this study was further supported in part by", new SalazarClass("this study was further supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this study was supported in part by", new SalazarClass("this study was supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this suggests that", new SalazarClass("this suggests that", "suggest", "V/N+that cl", "inferential", "stance", ""));
        bundles.put("this type of", new SalazarClass("this type of", "type", "NP+of", "grouping", "", ""));
        bundles.put("this work is further supported by", new SalazarClass("this work is further supported by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this work is supported by", new SalazarClass("this work is supported by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this work was further supported by", new SalazarClass("this work was further supported by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this work was supported by", new SalazarClass("this work was supported by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("this work was", new SalazarClass("this work was", "support", "other NP", "acknowledgment", "", ""));
        bundles.put("thought to be", new SalazarClass("thought to be", "think", "V/A+to", "generalization", "inferential", ""));
        bundles.put("thus it appears that", new SalazarClass("thus it appears that", "appear", "anticipatory it", "inferential", "stance", "it appears that"));
        bundles.put("thus it would appear that", new SalazarClass("thus it would appear that", "appear", "anticipatory it", "inferential", "stance", "it appears that"));
        bundles.put("to account for", new SalazarClass("to account for", "account", "V/A+to", "objective", "inferential", ""));
        bundles.put("to act as", new SalazarClass("to act as", "act", "V/A+to", "description", "", ""));
        bundles.put("to address this", new SalazarClass("to address this", "address", "V/A+to", "objective", "", ""));
        bundles.put("to associate with", new SalazarClass("to associate with", "associate", "V/A+to", "inferential", "stance", ""));
        bundles.put("to be determined", new SalazarClass("to be determined", "remain", "other passive", "objective", "", ""));
        bundles.put("to be involved in", new SalazarClass("to be involved in", "involve", "passive+PP", "inferential", "causative", ""));
        bundles.put("to be required for", new SalazarClass("to be required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("to be required", new SalazarClass("to be required", "require", "other passive", "framing", "", ""));
        bundles.put("to confirm that", new SalazarClass("to confirm that", "confirm", "V/A+to", "objective", "", ""));
        bundles.put("to demonstrate that", new SalazarClass("to demonstrate that", "demonstrate", "V/A+to", "objective", "", ""));
        bundles.put("to determine if", new SalazarClass("to determine if", "determine", "V/A+to", "objective", "", ""));
        bundles.put("to determine whether", new SalazarClass("to determine whether", "determine", "V/A+to", "objective", "", ""));
        bundles.put("to distinguish between", new SalazarClass("to distinguish between", "distinguish", "V/A+to", "objective", "", ""));
        bundles.put("to ensure that", new SalazarClass("to ensure that", "ensure", "V/A+to", "objective", "", ""));
        bundles.put("to interact with", new SalazarClass("to interact with", "interact", "V/A+to", "procedure", "", ""));
        bundles.put("to note that", new SalazarClass("to note that", "note", "V/A+to", "engagement", "stance", ""));
        bundles.put("to show that", new SalazarClass("to show that", "show", "V/A+to", "objective", "", ""));
        bundles.put("to test this hypothesis", new SalazarClass("to test this hypothesis", "test", "V/A+to", "objective", "", ""));
        bundles.put("to test this idea", new SalazarClass("to test this idea", "test", "V/A+to", "objective", "", "to test this hypothesis"));
        bundles.put("to test this possibility", new SalazarClass("to test this possibility", "test", "V/A+to", "objective", "", "to test this hypothesis"));
        bundles.put("to test this", new SalazarClass("to test this", "test", "V/A+to", "objective", "", ""));
        bundles.put("to test whether", new SalazarClass("to test whether", "test", "V/A+to", "objective", "", ""));
        bundles.put("to that observed", new SalazarClass("to that observed", "observe", "other passive", "comparative", "", ""));
        bundles.put("to that seen", new SalazarClass("to that seen", "see", "other passive", "comparative", "", ""));
        bundles.put("to the left", new SalazarClass("to the left", "left", "other PP", "location", "", ""));
        bundles.put("to the right", new SalazarClass("to the right", "right", "other PP", "location", "", ""));
        bundles.put("to the same degree", new SalazarClass("to the same degree", "same", "other PP", "comparative", "", "to the same"));
        bundles.put("to the same extent", new SalazarClass("to the same extent", "same", "other PP", "comparative", "", "to the same"));
        bundles.put("to the same region", new SalazarClass("to the same region", "same", "other PP", "comparative", "", "to the same"));
        bundles.put("to the same", new SalazarClass("to the same", "same", "other PP", "comparative", "", ""));
        bundles.put("together these data", new SalazarClass("together these data", "suggest", "others", "inferential", "stance", ""));
        bundles.put("together these results", new SalazarClass("together these results", "suggest", "others", "inferential", "stance", ""));
        bundles.put("total number of", new SalazarClass("total number of", "number", "NP+of", "quantification", "", ""));
        bundles.put("total volume of", new SalazarClass("total volume of", "volume", "NP+of", "quantification", "", ""));
        bundles.put("two types of", new SalazarClass("two types of", "type", "NP+of", "grouping", "", ""));
        bundles.put("under the control of", new SalazarClass("under the control of", "control", "other PP", "framing", "", ""));
        bundles.put("under the same conditions", new SalazarClass("under the same conditions", "condition", "other PP", "framing", "", ""));
        bundles.put("under these conditions", new SalazarClass("under these conditions", "condition", "other PP", "framing", "", ""));
        bundles.put("unlikely to be", new SalazarClass("unlikely to be", "unlikely", "V/A+to", "stance", "inferential", ""));
        bundles.put("used to amplify", new SalazarClass("used to amplify", "use", "other passive", "procedure", "", ""));
        bundles.put("used to determine", new SalazarClass("used to determine", "use", "other passive", "procedure", "", ""));
        bundles.put("used to identify", new SalazarClass("used to identify", "use", "other passive", "procedure", "", ""));
        bundles.put("very similar to", new SalazarClass("very similar to", "similar", "other AP", "comparative", "", ""));
        bundles.put("was able to", new SalazarClass("was able to", "able", "V/A+to", "description", "", ""));
        bundles.put("was added to", new SalazarClass("was added to", "add", "passive+PP", "procedure", "", ""));
        bundles.put("was analyzed by", new SalazarClass("was analyzed by", "analyze", "passive+PP", "procedure", "", ""));
        bundles.put("was assessed by", new SalazarClass("was assessed by", "assess", "passive+PP", "procedure", "", ""));
        bundles.put("was associated with", new SalazarClass("was associated with", "associate", "passive+PP", "inferential", "stance", ""));
        bundles.put("was based on", new SalazarClass("was based on", "base", "passive+PP", "framing", "", "is based on"));
        bundles.put("was carried out", new SalazarClass("was carried out", "carry out", "other passive", "procedure", "", ""));
        bundles.put("was confirmed by", new SalazarClass("was confirmed by", "confirm", "passive+PP", "procedure", "", ""));
        bundles.put("was dependent on", new SalazarClass("was dependent on", "dependent", "be+AP", "framing", "", ""));
        bundles.put("was detected by", new SalazarClass("was detected by", "detect", "passive+PP", "procedure", "", ""));
        bundles.put("was detected in", new SalazarClass("was detected in", "detect", "passive+PP", "inferential", "", ""));
        bundles.put("was determined as", new SalazarClass("was determined as", "determine", "passive+PP", "procedure", "", ""));
        bundles.put("was determined by", new SalazarClass("was determined by", "determine", "passive+PP", "procedure", "", ""));
        bundles.put("was determined using", new SalazarClass("was determined using", "determine", "other passive", "procedure", "", ""));
        bundles.put("was digested with", new SalazarClass("was digested with", "digest", "passive+PP", "procedure", "", ""));
        bundles.put("was dissolved in", new SalazarClass("was dissolved in", "dissolve", "passive+PP", "procedure", "", ""));
        bundles.put("was due to", new SalazarClass("was due to", "due to", "be+AP", "causative", "", ""));
        bundles.put("was examined by", new SalazarClass("was examined by", "examine", "passive+PP", "procedure", "", ""));
        bundles.put("was found in", new SalazarClass("was found in", "find", "passive+PP", "inferential", "", ""));
        bundles.put("was found to be", new SalazarClass("was found to be", "find", "V/A+to", "inferential", "", ""));
        bundles.put("was found to", new SalazarClass("was found to", "find", "V/A+to", "inferential", "", ""));
        bundles.put("was further supported by", new SalazarClass("was further supported by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("was further supported in part by", new SalazarClass("was further supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("was generated by", new SalazarClass("was generated by", "generate", "passive+PP", "procedure", "", ""));
        bundles.put("was induced by", new SalazarClass("was induced by", "induce", "passive+PP", "procedure", "", ""));
        bundles.put("was introduced into", new SalazarClass("was introduced into", "introduce", "passive+PP", "procedure", "", ""));
        bundles.put("was isolated from", new SalazarClass("was isolated from", "isolate", "passive+PP", "procedure", "", ""));
        bundles.put("was largely based on", new SalazarClass("was largely based on", "base", "passive+PP", "framing", "", "is based on"));
        bundles.put("was mainly based on", new SalazarClass("was mainly based on", "base", "passive+PP", "framing", "", "is based on"));
        bundles.put("was measured by", new SalazarClass("was measured by", "measure", "passive+PP", "procedure", "", ""));
        bundles.put("was mixed with", new SalazarClass("was mixed with", "mix", "passive+PP", "procedure", "", ""));
        bundles.put("was not detected", new SalazarClass("was not detected", "detect", "other passive", "inferential", "", ""));
        bundles.put("was observed in", new SalazarClass("was observed in", "observe", "passive+PP", "inferential", "", ""));
        bundles.put("was obtained by", new SalazarClass("was obtained by", "obtain", "passive+PP", "procedure", "", ""));
        bundles.put("was obtained from", new SalazarClass("was obtained from", "obtain", "passive+PP", "procedure", "", ""));
        bundles.put("was performed as described", new SalazarClass("was performed as described", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("was performed as", new SalazarClass("was performed as", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("was performed by", new SalazarClass("was performed by", "perform", "passive+PP", "procedure", "", ""));
        bundles.put("was performed in", new SalazarClass("was performed in", "perform", "passive+PP", "procedure", "", ""));
        bundles.put("was performed on", new SalazarClass("was performed on", "perform", "passive+PP", "procedure", "", ""));
        bundles.put("was performed using", new SalazarClass("was performed using", "perform", "other passive", "procedure", "", ""));
        bundles.put("was performed with", new SalazarClass("was performed with", "perform", "passive+PP", "procedure", "", ""));
        bundles.put("was prepared by", new SalazarClass("was prepared by", "prepare", "passive+PP", "procedure", "", ""));
        bundles.put("was prepared from", new SalazarClass("was prepared from", "prepare", "passive+PP", "procedure", "", ""));
        bundles.put("was present in", new SalazarClass("was present in", "present", "other AP", "description", "", ""));
        bundles.put("was purchased from", new SalazarClass("was purchased from", "purchase", "passive+PP", "procedure", "", ""));
        bundles.put("was purified from", new SalazarClass("was purified from", "purify", "passive+PP", "procedure", "", ""));
        bundles.put("was replaced with", new SalazarClass("was replaced with", "replace", "passive+PP", "procedure", "", ""));
        bundles.put("was required for", new SalazarClass("was required for", "require", "passive+PP", "framing", "", ""));
        bundles.put("was resuspended in", new SalazarClass("was resuspended in", "resuspend", "passive+PP", "procedure", "", ""));
        bundles.put("was shown to", new SalazarClass("was shown to", "show", "V/A+to", "citation", "inferential", ""));
        bundles.put("was similar to", new SalazarClass("was similar to", "similar", "be+AP", "comparative", "", ""));
        bundles.put("was subjected to", new SalazarClass("was subjected to", "subject", "passive+PP", "procedure", "", ""));
        bundles.put("was supported by", new SalazarClass("was supported by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("was supported in part by", new SalazarClass("was supported in part by", "support", "passive+PP", "inferential", "acknowledgment", "is supported by"));
        bundles.put("was unable to", new SalazarClass("was unable to", "unable", "V/A+to", "description", "", ""));
        bundles.put("was used as", new SalazarClass("was used as", "use", "passive+PP", "procedure", "", ""));
        bundles.put("was used for", new SalazarClass("was used for", "use", "passive+PP", "procedure", "", ""));
        bundles.put("was used in", new SalazarClass("was used in", "use", "passive+PP", "procedure", "", ""));
        bundles.put("was used to", new SalazarClass("was used to", "use", "passive+PP", "procedure", "", ""));
        bundles.put("we asked whether", new SalazarClass("we asked whether", "ask", "we+V", "objective", "", ""));
        bundles.put("we conclude that", new SalazarClass("we conclude that", "conclude", "we+V", "inferential", "stance", ""));
        bundles.put("we demonstrate that", new SalazarClass("we demonstrate that", "demonstrate", "we+V", "inferential", "stance", ""));
        bundles.put("we find that", new SalazarClass("we find that", "find", "we+V", "inferential", "stance", ""));
        bundles.put("we found that", new SalazarClass("we found that", "find", "we+V", "inferential", "stance", ""));
        bundles.put("we have been unable to confirm", new SalazarClass("we have been unable to confirm", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we have been unable to detect", new SalazarClass("we have been unable to detect", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we have been unable to express", new SalazarClass("we have been unable to express", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we have been unable to identify", new SalazarClass("we have been unable to identify", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we have been unable to", new SalazarClass("we have been unable to", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we have found", new SalazarClass("we have found", "find", "we+V", "inferential", "stance", ""));
        bundles.put("we have identified", new SalazarClass("we have identified", "identify", "we+V", "inferential", "stance", ""));
        bundles.put("we have shown previously that", new SalazarClass("we have shown previously that", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("we have shown previously", new SalazarClass("we have shown previously", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("we have shown that", new SalazarClass("we have shown that", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("we have shown", new SalazarClass("we have shown", "show", "we+V", "inferential", "stance", ""));
        bundles.put("we have used", new SalazarClass("we have used", "use", "we+V", "procedure", "", ""));
        bundles.put("we propose that", new SalazarClass("we propose that", "propose", "we+V", "inferential", "stance", ""));
        bundles.put("we show previously that", new SalazarClass("we show previously that", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("we show previously", new SalazarClass("we show previously", "show", "we+V", "inferential", "stance", "we show that"));
        bundles.put("we show that", new SalazarClass("we show that", "show", "we+V", "inferential", "stance", ""));
        bundles.put("we suggest that", new SalazarClass("we suggest that", "suggest", "we+V", "inferential", "stance", ""));
        bundles.put("we tested whether", new SalazarClass("we tested whether", "test", "we+V", "procedure", "", ""));
        bundles.put("we were able to demonstrate", new SalazarClass("we were able to demonstrate", "able", "V/A+to", "inferential", "", "were able to"));
        bundles.put("we were able to detect", new SalazarClass("we were able to detect", "able", "V/A+to", "inferential", "", "were able to"));
        bundles.put("we were able to identify", new SalazarClass("we were able to identify", "able", "V/A+to", "inferential", "", "were able to"));
        bundles.put("we were unable to confirm", new SalazarClass("we were unable to confirm", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we were unable to detect", new SalazarClass("we were unable to detect", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we were unable to express", new SalazarClass("we were unable to express", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we were unable to identify", new SalazarClass("we were unable to identify", "unable", "we+V", "inferential", "stance", "we were unable to"));
        bundles.put("we were unable to", new SalazarClass("we were unable to", "unable", "we+V", "inferential", "stance", ""));
        bundles.put("were able to demonstrate", new SalazarClass("were able to demonstrate", "able", "V/A+to", "inferential", "", "were able to"));
        bundles.put("were able to detect", new SalazarClass("were able to detect", "able", "V/A+to", "inferential", "", "were able to"));
        bundles.put("were able to identify", new SalazarClass("were able to identify", "able", "V/A+to", "inferential", "", "were able to"));
        bundles.put("were able to", new SalazarClass("were able to", "able", "V/A+to", "inferential", "", ""));
        bundles.put("were added to", new SalazarClass("were added to", "add", "passive+PP", "procedure", "", ""));
        bundles.put("were allowed to", new SalazarClass("were allowed to", "allow", "other passive", "procedure", "", ""));
        bundles.put("were analysed by", new SalazarClass("were analysed by", "analyze", "passive+PP", "procedure", "", ""));
        bundles.put("were analyzed by", new SalazarClass("were analyzed by", "analyze", "passive+PP", "procedure", "", ""));
        bundles.put("were as follows", new SalazarClass("were as follows", "follow", "as+V", "structuring", "", ""));
        bundles.put("were carried out at", new SalazarClass("were carried out at", "carry out", "passive+PP", "procedure", "", ""));
        bundles.put("were carried out", new SalazarClass("were carried out", "carry out", "other passive", "procedure", "", ""));
        bundles.put("were collected from", new SalazarClass("were collected from", "collect", "passive+PP", "procedure", "", ""));
        bundles.put("were detected by", new SalazarClass("were detected by", "detect", "passive+PP", "procedure", "", ""));
        bundles.put("were detected in", new SalazarClass("were detected in", "detect", "passive+PP", "inferential", "", ""));
        bundles.put("were determined by", new SalazarClass("were determined by", "determine", "passive+PP", "procedure", "", ""));
        bundles.put("were exposed to", new SalazarClass("were exposed to", "expose", "passive+PP", "procedure", "", ""));
        bundles.put("were fixed in", new SalazarClass("were fixed in", "fix", "passive+PP", "procedure", "", ""));
        bundles.put("were found to be", new SalazarClass("were found to be", "find", "V/A+to", "inferential", "", ""));
        bundles.put("were found to", new SalazarClass("were found to", "find", "V/A+to", "inferential", "", ""));
        bundles.put("were generated by", new SalazarClass("were generated by", "generate", "passive+PP", "procedure", "", ""));
        bundles.put("were grown at", new SalazarClass("were grown at", "grow", "passive+PP", "procedure", "", ""));
        bundles.put("were grown in", new SalazarClass("were grown in", "grow", "passive+PP", "procedure", "", ""));
        bundles.put("were grown to", new SalazarClass("were grown to", "grow", "passive+PP", "procedure", "", ""));
        bundles.put("were identified by", new SalazarClass("were identified by", "identify", "passive+PP", "procedure", "", ""));
        bundles.put("were incubated for", new SalazarClass("were incubated for", "incubate", "passive+PP", "procedure", "", ""));
        bundles.put("were incubated with", new SalazarClass("were incubated with", "incubate", "passive+PP", "procedure", "", ""));
        bundles.put("were isolated from", new SalazarClass("were isolated from", "isolate", "passive+PP", "procedure", "", ""));
        bundles.put("were made by", new SalazarClass("were made by", "make", "passive+PP", "procedure", "", ""));
        bundles.put("were obtained by", new SalazarClass("were obtained by", "obtain", "passive+PP", "procedure", "", ""));
        bundles.put("were obtained from", new SalazarClass("were obtained from", "obtain", "passive+PP", "procedure", "", ""));
        bundles.put("were obtained in", new SalazarClass("were obtained in", "result", "passive+PP", "comparative", "", ""));
        bundles.put("were obtained with", new SalazarClass("were obtained with", "result", "passive+PP", "comparative", "", ""));
        bundles.put("were performed as described", new SalazarClass("were performed as described", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("were performed as", new SalazarClass("were performed as", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("were performed in", new SalazarClass("were performed in", "perform", "passive+PP", "procedure", "", ""));
        bundles.put("were performed using", new SalazarClass("were performed using", "perform", "passive+PP", "procedure", "", ""));
        bundles.put("were performed with", new SalazarClass("were performed with", "perform", "passive+PP", "procedure", "", ""));
        bundles.put("were prepared as described", new SalazarClass("were prepared as described", "describe", "passive+PP", "citation/structuring", "", ""));
        bundles.put("were prepared as", new SalazarClass("were prepared as", "prepare", "passive+PP", "procedure", "", ""));
        bundles.put("were prepared by", new SalazarClass("were prepared by", "prepare", "passive+PP", "procedure", "", ""));
        bundles.put("were prepared from", new SalazarClass("were prepared from", "prepare", "passive+PP", "procedure", "", ""));
        bundles.put("were present in", new SalazarClass("were present in", "present", "other AP", "description", "", ""));
        bundles.put("were processed for", new SalazarClass("were processed for", "process", "passive+PP", "procedure", "", ""));
        bundles.put("were purchased from", new SalazarClass("were purchased from", "purchase", "passive+PP", "procedure", "", ""));
        bundles.put("were removed by", new SalazarClass("were removed by", "remove", "passive+PP", "procedure", "", ""));
        bundles.put("were resuspended in", new SalazarClass("were resuspended in", "resuspend", "passive+PP", "procedure", "", ""));
        bundles.put("were separated by", new SalazarClass("were separated by", "separate", "passive+PP", "procedure", "", ""));
        bundles.put("were separated on", new SalazarClass("were separated on", "separate", "passive+PP", "procedure", "", ""));
        bundles.put("were stained with", new SalazarClass("were stained with", "stain", "passive+PP", "procedure", "", ""));
        bundles.put("were subjected to", new SalazarClass("were subjected to", "subject", "passive+PP", "procedure", "", ""));
        bundles.put("were tested for", new SalazarClass("were tested for", "test", "passive+PP", "procedure", "", ""));
        bundles.put("were transferred to", new SalazarClass("were transferred to", "transfer", "passive+PP", "procedure", "", ""));
        bundles.put("were treated for", new SalazarClass("were treated for", "treat", "passive+PP", "procedure", "", ""));
        bundles.put("were treated with", new SalazarClass("were treated with", "treat", "passive+PP", "procedure", "", ""));
        bundles.put("were unable to", new SalazarClass("were unable to", "unable", "V/A+to", "description", "", ""));
        bundles.put("were used as", new SalazarClass("were used as", "use", "passive+PP", "procedure", "", ""));
        bundles.put("were used for", new SalazarClass("were used for", "use", "passive+PP", "procedure", "", ""));
        bundles.put("were used in", new SalazarClass("were used in", "use", "passive+PP", "procedure", "", ""));
        bundles.put("were used to", new SalazarClass("were used to", "use", "passive+PP", "procedure", "", ""));
        bundles.put("were washed in", new SalazarClass("were washed in", "wash", "passive+PP", "procedure", "", ""));
        bundles.put("were washed three times", new SalazarClass("were washed three times", "wash", "other passive", "procedure", "", ""));
        bundles.put("were washed twice with", new SalazarClass("were washed twice with", "wash", "passive+PP", "procedure", "", ""));
        bundles.put("were washed with", new SalazarClass("were washed with", "wash", "passive+PP", "procedure", "", ""));
        bundles.put("when compared with", new SalazarClass("when compared with", "compare", "passive+PP", "comparative", "", ""));
        bundles.put("which is consistent with", new SalazarClass("which is consistent with", "consistent", "be+AP", "comparative", "citation", ""));
        bundles.put("with respect to", new SalazarClass("with respect to", "respect", "other PP", "framing", "", ""));
        bundles.put("with the exception of", new SalazarClass("with the exception of", "exception", "PP+of", "framing", "", ""));
        bundles.put("with the exception", new SalazarClass("with the exception", "exception", "other PP", "framing", "", ""));
        bundles.put("with the following", new SalazarClass("with the following", "following", "other PP", "structuring", "", ""));
        bundles.put("with the use of", new SalazarClass("with the use of", "use", "PP+of", "procedure", "", ""));
        bundles.put("within the context of", new SalazarClass("within the context of", "context", "PP+of", "framing", "", "in the context of"));
        bundles.put("would be expected to", new SalazarClass("would be expected to", "expect", "V/A+to", "inferential", "stance", ""));
        bundles.put("would be expected", new SalazarClass("would be expected", "expect", "other passive", "inferential", "stance", ""));
        bundles.put("would result in", new SalazarClass("would result in", "result", "other V fragment", "causative", "stance", ""));
    }

    public String getFields() {
        return "bundle\tkeyword\tstructure\tfunction 1\tfunction 2\tvariant of";
    }

    public String classify(NGram n) {
        SalazarClass c = bundles.get(n.getText());
        if(c != null) {
            return c.toString();
        } else {
            return "Unknown";
        }
    }
}
